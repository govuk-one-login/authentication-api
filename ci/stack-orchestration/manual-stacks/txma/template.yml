AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  Repo: "https://github.com/govuk-one-login/authentication-api/tree/main/ci/stack-orchestration/manual-stacks/txma"

Description: SQS queues for audit events

Parameters:
  Environment:
    Description: 'The environment type'
    Type: 'String'
    AllowedValues:
      - 'dev'
      - 'build'
      - 'staging'
      - 'integration'
      - 'production'
    ConstraintDescription: must be dev, build, staging, integration or production

Mappings:
  TxMAAccountARN:
    Environment:
      dev: 'unused'
      build: 'unused'
      staging: 'arn:aws:iam::178023842775:root'
      integration: 'arn:aws:iam::729485541398:root'
      production: 'arn:aws:iam::451773080033:root'

Conditions:
  TxMAIntegrationEnabled:
    Fn::Or:
      - Fn::Equals: [!Ref Environment, "staging"]
      - Fn::Equals: [!Ref Environment, "integration"]
      - Fn::Equals: [!Ref Environment, "production"]

Resources:
  TxMASQSProducerAuditEventQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 # 14 days in seconds
      QueueName: !Sub '${AWS::StackName}-AuditEventQueue'
      KmsMasterKeyId: !Ref TxMASQSProducerAuditEventQueueEncryptionKeyAlias
      RedriveAllowPolicy:
        redrivePermission: denyAll
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt TxMAAuditEventDeadLetterQueue.Arn
        maxReceiveCount: 10
      Tags:
        - Key: 'AuthoredBy'
          Value: 'TxMA'
        - Key: 'ProducerType'
          Value: 'SQS'

  TxMASQSProducerAuditEventQueuePolicy:
    Condition: TxMAIntegrationEnabled
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
        - !Ref TxMASQSProducerAuditEventQueue
      PolicyDocument:
        Statement:
          - Sid: 'AllowReadByTxMAAccount'
            Effect: Allow
            Principal:
              AWS: !FindInMap [TxMAAccountARN, Environment, !Ref 'Environment']
            Action:
              - 'sqs:ChangeMessageVisibility'
              - 'sqs:ReceiveMessage'
              - 'sqs:DeleteMessage'
              - 'sqs:GetQueueAttributes'
            Resource: !GetAtt TxMASQSProducerAuditEventQueue.Arn

  TxMAAuditEventDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      MessageRetentionPeriod: 1209600 # 14 days in seconds
      QueueName: !Sub '${AWS::StackName}-AuditEventDeadLetterQueue'
      KmsMasterKeyId: !Ref TxMASQSProducerAuditEventQueueEncryptionKeyAlias
      Tags:
        - Key: 'AuthoredBy'
          Value: 'TxMA'
        - Key: 'ProducerType'
          Value: 'SQS'

  TxMASQSProducerAuditEventQueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Symmetric key used to encrypt TxMA audit messages at rest in SQS
      EnableKeyRotation: true
      KeySpec: SYMMETRIC_DEFAULT
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: 'Enable root account access'
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - 'kms:*'
            Resource: '*'
          - Sid: 'Allow Lambda Access'
            Effect: Allow
            Principal:
              Service: 'lambda.amazonaws.com'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt
              - kms:GenerateDataKey
            Resource: '*'
          - !If
            - TxMAIntegrationEnabled
            - Sid: 'Allow decryption of events by TxMA'
              Effect: Allow
              Principal:
                AWS: !FindInMap [TxMAAccountARN, Environment, !Ref 'Environment']
              Action:
                - 'kms:decrypt'
              Resource: '*'
            - !Ref AWS::NoValue
      Tags:
        - Key: 'AuthoredBy'
          Value: 'TxMA'
        - Key: 'ProducerType'
          Value: 'SQS'

  TxMASQSProducerAuditEventQueueEncryptionKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${AWS::StackName}/AuditEventEncryptionKey
      TargetKeyId: !Ref TxMASQSProducerAuditEventQueueEncryptionKey

Outputs:
  KMSARN:
    Description: 'ARN of the KMS key used for encryption.'
    Value: !Sub '${TxMASQSProducerAuditEventQueueEncryptionKey.Arn}'
    Export:
      Name: !Sub '${AWS::StackName}-KMSARN'
  QueueARN:
    Description: 'ARN of the queue to submit events to.'
    Value: !Sub '${TxMASQSProducerAuditEventQueue.Arn}'
    Export:
      Name: !Sub '${AWS::StackName}-QueueARN'
  QueueName:
    Description: 'Name of the queue to submit events to.'
    Value: !Sub '${TxMASQSProducerAuditEventQueue.QueueName}'
    Export:
      Name: !Sub '${AWS::StackName}-QueueName'
  QueueURL:
    Description: 'URL of the queue to submit events to.'
    Value: !Sub '${TxMASQSProducerAuditEventQueue.QueueUrl}'
    Export:
      Name: !Sub '${AWS::StackName}-QueueURL'
