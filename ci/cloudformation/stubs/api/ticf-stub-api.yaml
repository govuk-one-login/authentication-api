AWSTemplateFormatVersion: "2010-09-09"
Resources:
  TicfCriStubApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub
        - ${Env}-di-ticf-cri-stub
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      EndpointConfiguration:
        Types:
          - PRIVATE
        VpcEndpointIds:
          - Fn::ImportValue: !Sub "${VpcStackName}-ExecuteApiGatewayEndpointId"
      Policy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "execute-api:Invoke"
            Principal: "*"
            Resource:
              - "execute-api:/*"
          - Effect: Deny
            Action: "execute-api:Invoke"
            Principal: "*"
            Resource:
              - "execute-api:/*"
            Condition:
              StringNotEquals:
                aws:SourceVpce:
                  - Fn::ImportValue: !Sub "${VpcStackName}-ExecuteApiGatewayEndpointId"
      Body:
        openapi: "3.0.1"
        info:
          title: !Sub "${Environment}-di-ticf-cri-stub"
        paths:
          /auth:
            post:
              x-amazon-apigateway-integration:
                type: aws_proxy
                httpMethod: POST
                uri: !Sub "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${TicfCriStubLambdaFunction.Arn}:active/invocations"
                timeoutInMillis: 29000

  TicfCriStubDeployment:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId: !Ref TicfCriStubApi

  TicfCriStubApiStage:
    Type: AWS::ApiGateway::Stage
    DependsOn: TicfCriStubLambdaFunction
    Properties:
      AccessLogSetting:
        DestinationArn: !GetAtt TicfCriStubApiAccessLogGroup.Arn
        Format:
          Fn::ToJsonString:
            requestId: $context.requestId
            ip: $context.identity.sourceIp
            userAgent: $context.identity.userAgent
            requestTime: $context.requestTime
            httpMethod: $context.httpMethod
            resourcePath: $context.resourcePath
            status: $context.status
            protocol: $context.protocol
            responseLength: $context.responseLength
            integrationStatus: $context.integration.integrationStatus
            integrationLatency: $context.integration.latency
            integrationRequestId: $context.integration.requestId
      CacheClusterEnabled: false
      DeploymentId: !Ref TicfCriStubDeployment
      MethodSettings:
        - CachingEnabled: false
          DataTraceEnabled: false
          HttpMethod: "*"
          ResourcePath: "/*"
          LoggingLevel: INFO
          MetricsEnabled: true
      RestApiId: !Ref TicfCriStubApi
      StageName: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      TracingEnabled: true

  TicfCriStubApiAccessLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      KmsKeyId: !GetAtt MainKmsKey.Arn
      LogGroupName: !Sub
        - "${Env}-di-ticf-cri-api-access-logs"
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          cloudwatchLogRetentionInDays,
        ]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TicfCriStubApiAccessLogGroup"
        - Key: Environment
          Value: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
        - Key: Source
          Value: govuk-one-login/authentication-api/ci/cloudformation/auth/api/ticf-stub-api.yaml

  TicfCriStubApiAccessLogSubscriptionFilter:
    Condition: IsSplunkEnabled
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref TicfCriStubApiAccessLogGroup

  TicfCriStubApiExecutionLogSubscriptionFilter:
    Condition: IsSplunkEnabled
    Type: AWS::Logs::SubscriptionFilter
    DependsOn:
      - TicfCriStubApiStage
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Sub
        - API-Gateway-Execution-Logs_${TicfCriStubApi}/${StageName}
        - StageName:
            !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
