AWSTemplateFormatVersion: "2010-09-09"
Resources:
  TicfCriFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub
        - ${Env}-ticf-cri-lambda
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      AutoPublishAlias: active
      CodeUri: ./frontend-api/build/distributions/frontend-api.zip
      Handler: uk.gov.di.authentication.frontendapi.lambda.TicfCriHandler::handleRequest
      Environment:
        Variables:
          VERIFY_EMAIL_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/verify_email_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          VERIFY_PHONE_NUMBER_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/verify_phone_number_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          MFA_SMS_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/mfa_sms_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          PASSWORD_RESET_CONFIRMATION_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/password_reset_confirmation_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          ACCOUNT_CREATED_CONFIRMATION_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/account_created_confirmation_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          RESET_PASSWORD_WITH_CODE_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/reset_password_with_code_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          PASSWORD_RESET_CONFIRMATION_SMS_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/password_reset_confirmation_sms_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          VERIFY_CHANGE_HOW_GET_SECURITY_CODES_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/verify_change_how_get_security_codes_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          CHANGE_HOW_GET_SECURITY_CODES_CONFIRMATION_TEMPLATE_ID: !Sub
            - "{{resolve:ssm:/deploy/${env}/change_how_get_security_codes_confirmation_template_id}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          TICF_CRI_SERVICE_CALL_TIMEOUT: !Sub
            - "{{resolve:ssm:/deploy/${env}/ticf_cri_service_call_timeout}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          TICF_CRI_SERVICE_URI: !Sub
            - "{{resolve:secretsmanager:/deploy/${env}/ticf_cri_service_uri}}"
            - env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      LoggingConfig:
        LogGroup: !Ref TicfCriFunctionLogGroup
      Policies:
        - !Ref LambdaBasicExecutionPolicy
      SnapStart:
        ApplyOn: PublishedVersions
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC

  TicfCriFunctionInvocationPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: "IAM policy managing lambda invocation access for the TICF CRI lambda"
      Path: !Sub
        - /${Env}/oidc-shared/
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowLambdaInvocation
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt TicfCriFunctionAliasactive.AliasArn

  TicfCriFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub
        - /aws/lambda/${Env}-ticf-cri-lambda
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          cloudwatchLogRetentionInDays,
        ]
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TicfCriFunctionLogGroup"
        - Key: Environment
          Value: !Ref Environment
        - Key: Source
          Value: govuk-one-login/authentication-api/ci/cloudformation/auth/function/ticf-cri.yaml

  TicfCriFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub
        - ${Env}-ticf-cri-errors
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref TicfCriFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub
            - ${Env}-ticf-cri-error-count
            - Env:
                !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  TicfCriFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions: !If
        - UseAlarmActions
        - - !Sub "{{resolve:ssm:/deploy/${Environment}/slack_alert_notification_topic_arn}}"
        - []
      AlarmDescription: !Sub
        - "${AlarmThreshold} or more number of errors have occurred in the ${Env}-ticf-cri-lambda function. ${RunbookLink}"
        - AlarmThreshold:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              lambdaLogAlarmThreshold,
              DefaultValue: 20,
            ]
          Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          RunbookLink:
            !FindInMap [
              LambdaConfiguration,
              "ticf-cri",
              RunbookLink,
              DefaultValue: "",
            ]
      AlarmName: !Sub
        - ${Env}-ticf-cri-alarm
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub
        - ${Env}-ticf-cri-error-count
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          lambdaLogAlarmThreshold,
          DefaultValue: 20,
        ]

  TicfCriFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions: !If
        - UseAlarmActions
        - - !Sub "{{resolve:ssm:/deploy/${Environment}/slack_alert_notification_topic_arn}}"
        - []
      AlarmDescription: !Sub
        - "Lambda error rate of ${ErrorRateThreshold}% has been reached in the ${Env}-ticf-cri-lambda. ${RunbookLink}"
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
          ErrorRateThreshold:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              lambdaLogAlarmErrorRateThreshold,
              DefaultValue: 10,
            ]
          RunbookLink:
            !FindInMap [
              LambdaConfiguration,
              "ticf-cri",
              RunbookLink,
              DefaultValue: "",
            ]
      AlarmName: !Sub
        - ${Env}-ticf-cri-error-rate-alarm
        - Env: !If [UseSubEnvironment, !Ref SubEnvironment, !Ref Environment]
      ComparisonOperator: GreaterThanOrEqualToThreshold
      DatapointsToAlarm: 1
      EvaluationPeriods: 1
      Metrics:
        - Id: e1
          Label: "Error Rate"
          ReturnData: true
          Expression: (m2/m1)*100
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub
                    - ${Env}-ticf-cri-lambda
                    - Env:
                        !If [
                          UseSubEnvironment,
                          !Ref SubEnvironment,
                          !Ref Environment,
                        ]
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub
                    - ${Env}-ticf-cri-lambda
                    - Env:
                        !If [
                          UseSubEnvironment,
                          !Ref SubEnvironment,
                          !Ref Environment,
                        ]
            Period: 60
            Stat: Sum
            Unit: Count
      Threshold:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          lambdaLogAlarmErrorRateThreshold,
          DefaultValue: 10,
        ]

  TicfCriFunctionSubscriptionFilter:
    Condition: IsSplunkEnabled
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref TicfCriFunctionLogGroup
