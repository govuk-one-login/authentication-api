openapi: "3.0.1"
info:
  title: "auth-account-management-method-management-api"
  version: 1.0.1
  description: Auth Account Management API
servers:
  - url: "https://localhost:8080/"
paths:
  /authenticate:
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.authenticate.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /update-password:
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.update-password.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /update-email:
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.update-email.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /delete-account:
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.delete-account.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /send-otp-notification:
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.send-otp-notification.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /update-phone-number:
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.update-phone-number.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
  /v1/mfa-methods/{publicSubjectId}:
    parameters:
      - name: publicSubjectId
        in: path
        required: true
        schema:
          type: string
    get:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.mfa-methods-retrieve.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
      description: "Retrieve mfaMethods that for the given public subject id"
      tags:
        - 2FAManagement
      summary: Retrieves the list of MFA Methods for a user
      operationId: "mfa-methods-retrieve"
      responses:
        "200":
          description: Successful Operation.  The retrieve query was accepted and the response contains all matching MFAMethods.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MfaMethod"
              examples:
                user-with-single-mfa-type-app:
                  summary: a user with a single MFA
                  value:
                    - mfaIdentifier: "bb5ccc7d-2591-4ccd-ae04-2b2c95b4e256"
                      priorityIdentifier: BACKUP
                      method:
                        mfaMethodType: AUTH_APP
                        credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"
                      methodVerified: true
                user-with-multiple-mfa-types-default-sms:
                  summary: a user with a default mfa method of SMS, and a backup auth app method
                  value:
                    - mfaIdentifier: "78b8b624-d59d-49e8-b321-1a5e0876a244"
                      priorityIdentifier: DEFAULT
                      method:
                        mfaMethodType: SMS
                        phoneNumber: "070"
                      methodVerified: true
                    - mfaIdentifier: "4372e333-266c-4245-8c4d-385aafdd3fb3"
                      priorityIdentifier: BACKUP
                      method:
                        mfaMethodType: AUTH_APP
                        credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"
                      methodVerified: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
              examples:
                bad-get-request:
                  value:
                    code: 1234
                    message: "email is malformed"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
        "500":
          description: Search not available
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
      x-code-samples:
        - lang: shell
          label: cURL request example
          source: |
            curl -X POST "http://localhost/mfa-methods -H "Content-Type: application/json" -H "Prefer:{example=an-example -d '{"email": "user@gov.uk"}'
    post:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.mfa-methods-create.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
      tags:
        - 2FAManagement
      description: Creates an mfa method. A new MFA Method cannot be created as DEFAULT, it must be BACKUP and promoted at a later stage
      operationId: "mfa-method-create"
      parameters:
        - name: publicSubjectId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MfaMethodCreateRequest"
        required: true
      responses:
        "200":
          description: MFA Method Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MfaMethod"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
        "500":
          description: MFA Method could not be created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
  /v1/mfa-methods/{publicSubjectId}/{mfaIdentifier}:
    parameters:
      - name: mfaIdentifier
        in: path
        required: true
        schema:
          type: string
          format: uuid
      - name: publicSubjectId
        in: path
        required: true
        schema:
          type: string
    put:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.mfa-methods-update.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
      tags:
        - 2FAManagement
      description: Updates an mfa method. If the MFA method is updated to 'DEFAULT', the current 'DEFAULT' gets relegated to backup. Returns all a user's MFA methods following the update.
      operationId: "mfa-methods-update"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MfaMethodUpdateRequest"
        required: true
      responses:
        "200":
          description: MFA Method Updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MfaMethod"
              examples:
                user-with-single-mfa-type-app:
                  summary: a user with a single MFA after update
                  value:
                    - mfaIdentifier: "bb5ccc7d-2591-4ccd-ae04-2b2c95b4e256"
                      priorityIdentifier: BACKUP
                      method:
                        mfaMethodType: AUTH_APP
                        credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"
                      methodVerified: true
                user-with-multiple-mfa-types-default-sms:
                  summary: a user with a default mfa method of SMS, and a backup auth app method after update
                  value:
                    - mfaIdentifier: "78b8b624-d59d-49e8-b321-1a5e0876a244"
                      priorityIdentifier: DEFAULT
                      method:
                        mfaMethodType: SMS
                        phoneNumber: "070"
                      methodVerified: true
                    - mfaIdentifier: "4372e333-266c-4245-8c4d-385aafdd3fb3"
                      priorityIdentifier: BACKUP
                      method:
                        mfaMethodType: AUTH_APP
                        credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"
                      methodVerified: true
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
        "404":
          description: MFA Method not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
        "500":
          description: MFA Method could not be updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
    delete:
      security:
        - authorise-access-token: []
      x-amazon-apigateway-integration:
        type: "aws_proxy"
        httpMethod: "POST"
        uri: "${endpoint_modules.mfa-methods-delete.integration_uri}"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
      tags:
        - 2FAManagement
      description: Deletes the mfa method identified by the mfa identifier. Cannot delete an identifier that is 'DEFAULT'.
      operationId: "mfa-method-delete"
      parameters:
        - name: mfaIdentifier
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: publicSubjectId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: MFA Method Deleted
        "404":
          description: MFA Method Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
        "409":
          description: Cannot delete a Default MFA Method
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
        "500":
          description: MFA Method could not be deleted
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimpleError"
components:
  schemas:
    PriorityEnum:
      type: string
      enum:
        - DEFAULT
        - BACKUP
    MfaMethod:
      required:
        - priorityIdentifier
        - method
      type: object
      properties:
        mfaIdentifier:
          type: string
          format: uuid
        priorityIdentifier:
          $ref: "#/components/schemas/PriorityEnum"
        method:
          oneOf:
            - $ref: "#/components/schemas/SmsMethod"
            - $ref: "#/components/schemas/AuthAppMethod"
        methodVerified:
          type: boolean
    SmsMethod:
      type: object
      properties:
        mfaMethodType:
          type: string
          enum:
            - SMS
        phoneNumber:
          type: string
    CreateSmsMethod:
      type: object
      properties:
        mfaMethodType:
          type: string
          enum:
            - SMS
        phoneNumber:
          type: string
        otp:
          type: string
    AuthAppMethod:
      type: object
      properties:
        mfaMethodType:
          type: string
          enum:
            - AUTH_APP
        credential:
          type: string

    MfaMethodCreate:
      required:
        - priorityIdentifier
        - method
      type: object
      properties:
        priorityIdentifier:
          $ref: "#/components/schemas/PriorityEnum"
        method:
          oneOf:
            - $ref: "#/components/schemas/CreateSmsMethod"
            - $ref: "#/components/schemas/AuthAppMethod"
      example:
        priorityIdentifier: DEFAULT
        method:
          mfaMethodType: AUTH_APP
          credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"
    MfaMethodUpdate:
      required:
        - priorityIdentifier
        - method
      type: object
      properties:
        priorityIdentifier:
          $ref: "#/components/schemas/PriorityEnum"
        method:
          oneOf:
            - $ref: "#/components/schemas/SmsMethod"
            - $ref: "#/components/schemas/AuthAppMethod"
      example:
        priorityIdentifier: DEFAULT
        method:
          mfaMethodType: SMS
          phoneNumber: "070"
    MfaMethodCreateRequest:
      required:
        - mfaMethod
      type: object
      properties:
        mfaMethod:
          $ref: "#/components/schemas/MfaMethodCreate"
      example:
        mfaMethod:
          priorityIdentifier: DEFAULT
          method:
            mfaMethodType: AUTH_APP
            credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"

    MfaMethodUpdateRequest:
      required:
        - mfaMethod
      type: object
      properties:
        mfaMethod:
          $ref: "#/components/schemas/MfaMethodCreate"
      example:
        mfaMethod:
          priorityIdentifier: DEFAULT
          method:
            mfaMethodType: AUTH_APP
            credential: "AAAABBBBCCCCCDDDDD55551111EEEE2222FFFF3333GGGG4444"
    SimpleError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
          description: API specific error code
        message:
          type: string
          description: Human readable error message

  securitySchemes:
    authorise-access-token:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "custom"
      x-amazon-apigateway-authorizer:
        type: "token"
        authorizerUri: "${authorizer_uri}"
        authorizerCredentials: "${authorizer_credentials}"
        authorizerResultTtlInSeconds: 0
