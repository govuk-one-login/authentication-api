platform: linux
image_resource:
  type: registry-image
  source:
    repository: hashicorp/terraform
    tag: 1.1.9
    username: ((docker-hub-username))
    password: ((docker-hub-password))
params:
  DEPLOYER_ROLE_ARN: ((deployer-role-arn-non-prod))
  DEPLOY_ENVIRONMENT: build
  NOTIFY_API_KEY: ((build-notify-api-key))
  NOTIFY_DESTINATIONS: ((test-notify-phone-number))
  DOC_APP_RP_CLIENT_ID: ((build-doc-app-rp-client-id))
  STATE_BUCKET: digital-identity-dev-tfstate
  STATE_LOCKING_TABLE: digital-identity-dev-tfstate-locking
  TEST_CLIENT_VERIFY_EMAIL_OTP: ((test-client-verify-email-otp))
  TEST_CLIENT_VERIFY_PHONE_NUMBER_OTP: ((test-client-verify-phone-number-otp))
  SPOT_ACCOUNT_NUMBER: ((staging-spot-account-number))
  SPOT_RESPONSE_QUEUE_ARN: ((staging-spot-response_queue_arn))
  SPOT_RESPONSE_QUEUE_KMS_ARN: ((staging-spot-response_queue_kms_arn))
  TXMA_ACCOUNT_ID: ((build-txma-account-id))
  TEST_CLIENTS_ENABLED: false
inputs:
  - name: api-terraform-src
  - name: oidc-api-release
  - name: frontend-api-release
  - name: client-registry-api-release
  - name: ipv-api-release
  - name: doc-checking-app-api-release
  - name: shared-terraform-outputs
outputs:
  - name: terraform-outputs
run:
  path: /bin/sh
  args:
    - -euc
    - |
      if [[ "${DEPLOY_ENVIRONMENT}" == "build" ]]; then
        ENABLE_STATE_LOCKING=true
      else
        ENABLE_STATE_LOCKING=false
      fi

      cd "api-terraform-src/ci/terraform/oidc"
      terraform init -input=false \
        -backend-config "role_arn=${DEPLOYER_ROLE_ARN}" \
        -backend-config "bucket=${STATE_BUCKET}" \
        -backend-config "key=${DEPLOY_ENVIRONMENT}-terraform.tfstate" \
        -backend-config "encrypt=true" \
        -backend-config "region=eu-west-2" \
        -backend-config "dynamodb_table=${STATE_LOCKING_TABLE}"

      terraform apply -auto-approve \
        -var "oidc_api_lambda_zip_file=$(ls -1 ../../../../oidc-api-release/*.zip)" \
        -var "frontend_api_lambda_zip_file=$(ls -1 ../../../../frontend-api-release/*.zip)" \
        -var "client_registry_api_lambda_zip_file=$(ls -1 ../../../../client-registry-api-release/*.zip)" \
        -var "ipv_api_lambda_zip_file=$(ls -1 ../../../../ipv-api-release/*.zip)" \
        -var "doc_checking_app_api_lambda_zip_file=$(ls -1 ../../../../doc-checking-app-api-release/*.zip)" \
        -var "doc_app_rp_client_id=${DOC_APP_RP_CLIENT_ID}" \
        -var "deployer_role_arn=${DEPLOYER_ROLE_ARN}" \
        -var "notify_api_key=${NOTIFY_API_KEY}" \
        -var "environment=${DEPLOY_ENVIRONMENT}" \
        -var "shared_state_bucket=${STATE_BUCKET}" \
        -var "test_client_verify_email_otp=${TEST_CLIENT_VERIFY_EMAIL_OTP}" \
        -var "test_client_verify_phone_number_otp=${TEST_CLIENT_VERIFY_PHONE_NUMBER_OTP}" \
        -var "test_clients_enabled=${TEST_CLIENTS_ENABLED}" \
        -var "notify_test_destinations=${NOTIFY_DESTINATIONS}" \
        -var "spot_account_number=${SPOT_ACCOUNT_NUMBER}" \
        -var "spot_response_queue_arn=${SPOT_RESPONSE_QUEUE_ARN}" \
        -var "spot_response_queue_kms_arn=${SPOT_RESPONSE_QUEUE_KMS_ARN}" \
        -var "txma_account_id=${TXMA_ACCOUNT_ID}" \
        -var-file "${DEPLOY_ENVIRONMENT}-overrides.tfvars" \
        -lock="${ENABLE_STATE_LOCKING}"

      terraform output --json > ../../../../terraform-outputs/${DEPLOY_ENVIRONMENT}-terraform-outputs.json
