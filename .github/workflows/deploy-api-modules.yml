name: "Build and deploy API modules"
env:
  JAVA_VERSION: 17
  JAVA_DISTRIBUTION: corretto

on:
  push:
    branches:
      - main

concurrency:
  group: "build-and-deploy-api-modules"
  cancel-in-progress: false

jobs:
  pr-data:
    name: Get data for merged PR
    permissions:
      contents: read
      pull-requests: read
    uses: ./.github/workflows/call_get_pr_data.yml

  build-cache:
    name: Set up build cache
    runs-on: ubuntu-latest
    outputs:
      java_version: ${{ env.JAVA_VERSION }}
      java_distribution: ${{ env.JAVA_DISTRIBUTION }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
      - name: Set up JDK 17
        uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9 #v4.2.1
        with:
          java-version: ${{ env.JAVA_VERSION}}
          distribution: ${{ env.JAVA_DISTRIBUTION}}
      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4
        with:
          gradle-version: wrapper
          cache-read-only: false
      - name: Download dependencies for caching
        run: ./gradlew --no-daemon --console=plain assemble

  build:
    name: Build modules
    needs:
      - build-cache
    strategy:
      matrix:
        module:
          - account-management-api
          - auth-external-api
          - client-registry-api
          - delivery-receipts-api
          - doc-checking-app-api
          - frontend-api
          - interventions-api-stub
          - ipv-api
          - oidc-api
          - test-services-api
          - ticf-cri-stub
          - utils
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_build-single-api-module.yml
    with:
      module_name: ${{ matrix.module }}
      aws_region: eu-west-2
      java_version: ${{ needs.build-cache.outputs.java_version }}
      java_distribution: ${{ needs.build-cache.outputs.java_distribution }}
    secrets:
      aws_role: ${{ secrets.DEPLOYER_ROLE }}
      source_bucket: ${{ secrets.SOURCE_BUCKET }}
      destination_bucket: ${{ secrets.DESTINATION_BUCKET }}
      signing_profile: ${{ secrets.SIGNING_PROFILE }}
      lookup_table: ${{ secrets.ARTIFACT_LOOKUP_TABLE }}

  create-promotion-artifact-shared:
    name: Create Shared Promotion Artifact
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_create-shared-promotion-artifact.yml

  create-promotion-artifacts-simple-modules:
    name: Create Promotion Artifact
    needs:
      - build
    strategy:
      matrix:
        include:
          - module_name: account-management-api
            terraform_directory_name: account-management
          - module_name: auth-external-api
            terraform_directory_name: auth-external-api
          - module_name: delivery-receipts-api
            terraform_directory_name: delivery-receipts
          - module_name: interventions-api-stub
            terraform_directory_name: interventions-api-stub
          - module_name: test-services-api
            terraform_directory_name: test-services
          - module_name: ticf-cri-stub
            terraform_directory_name: ticf-cri-stub
          - module_name: utils
            terraform_directory_name: utils
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_create-simple-module-promotion-artifact.yml
    with:
      module_name: ${{ matrix.module_name }}
      terraform_directory_name: ${{ matrix.terraform_directory_name }}

  create-promotion-artifact-oidc:
    name: Create OIDC Promotion artifact
    needs:
      - build
    permissions:
      id-token: write
      contents: read
    uses: ./.github/workflows/call_create-oidc-promotion-artifact.yml
    with:
      oidc_api_module_name: oidc-api
      client_registry_api_module_name: client-registry-api
      doc_checking_app_api_module_name: doc-checking-app-api
      frontend_api_module_name: frontend-api
      ipv_api_module_name: ipv-api

      terraform_directory_name: oidc

  gather-and-trigger-codepipeline:
    name: Gather and trigger CodePipeline
    needs:
      - pr-data
      - create-promotion-artifact-shared
      - create-promotion-artifacts-simple-modules
      - create-promotion-artifact-oidc
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 # v4.0.2
        with:
          role-to-assume: ${{ secrets.GHA_ROLE }}
          aws-region: eu-west-2

      - name: Download all promotion artifacts
        id: download_promotion_artifacts
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: promotion-artifacts
          pattern: promotion_artifact_*
          merge-multiple: true

      - name: Upload single promotion artifact to S3
        working-directory: promotion-artifacts
        env:
          METADATA: ${{ needs.pr-data.outputs.data }}
        run: |
          echo "::group::Zip all promotion artifacts"
          zip -r authentication-api.zip .
          echo "::endgroup::"

          echo "::group::Upload final artifact to S3"
          OBJECT_VERSION="$(aws s3api put-object \
            --bucket ${{ secrets.ARTIFACT_BUCKET }} \
            --key authentication-api.zip \
            --body authentication-api.zip \
            --metadata "${METADATA}" \
            --query VersionId --output text)"
          echo "::endgroup::"
          echo "::notice title=Final artifact uploaded to S3::object: authentication-api.zip, version: $OBJECT_VERSION"
