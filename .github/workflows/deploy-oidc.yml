name: Deploy OIDC

env:
  AWS_REGION: eu-west-2

#gha role is build Auth github actions role in Gds dev Account
#Artifact bucket is Build Auth deploy github artifcat Source bucket
#Destination Bucket is auth-lambda-signed bucket from prod tooling account

on:
  workflow_run:
    workflows: ["Build modules"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.GHA_ROLE }}
          aws-region: ${{ env.AWS_REGION }}
      
      - name: Download and copy Audit Processors signed lambda zip
        working-directory: ci/terraform/oidc
        run: |
          aws s3 cp s3://${{ secrets.DESTINATION_BUCKET }} ./artifacts \
            --recursive --exclude "*" \
            --include "signed-oidc-api-${{ github.sha }}-*"
          mv artifacts/signed-oidc-api-*.zip artifacts/oidc-api.zip

      - name: Download and copy Client Registry API signed artifact
        working-directory: ci/terraform/oidc
        run: |
          aws s3 cp s3://${{ secrets.DESTINATION_BUCKET }} ./artifacts \
            --recursive --exclude "*" \
            --include "signed-client-registry-api-${{ github.sha }}-*"
          mv artifacts/signed-client-registry-api-*.zip artifacts/client-registry-api.zip

      - name: Download and copy Doc Checking App API signed artifact
        working-directory: ci/terraform/oidc
        run: |
          aws s3 cp s3://${{ secrets.DESTINATION_BUCKET }} ./artifacts \
            --recursive --exclude "*" \
            --include "signed-doc-checking-app-api-${{ github.sha }}-*"
          mv artifacts/signed-doc-checking-app-api-*.zip artifacts/doc-checking-app-api.zip

      - name: Download and copy Frontend API signed artifact
        working-directory: ci/terraform/oidc
        run: |
          aws s3 cp s3://${{ secrets.DESTINATION_BUCKET }} ./artifacts \
            --recursive --exclude "*" \
            --include "signed-frontend-api-${{ github.sha }}-*"
          mv artifacts/signed-frontend-api-*.zip artifacts/frontend-api.zip

      - name: Download and copy IPV API signed artifact
        working-directory: ci/terraform/oidc
        run: |
          aws s3 cp s3://${{ secrets.DESTINATION_BUCKET }} ./artifacts \
            --recursive --exclude "*" \
            --include "signed-ipv-api-${{ github.sha }}-*"
          mv artifacts/signed-ipv-api-*.zip artifacts/ipv-api.zip

      - name: Upload OIDC Terraform files
        working-directory: ci/terraform
        run: |
          zip -r oidc.zip .
          S3_RESPONSE=`aws s3api put-object \
            --bucket ${{ secrets.ARTIFACT_BUCKET }} \
            --key oidc.zip \
            --body oidc.zip \
            --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA,committag=$GIT_TAG,commitmessage=$COMMIT_MSG"`
          VERSION=`echo $S3_RESPONSE | jq .VersionId -r`
          echo "VERSION=$VERSION" >> $GITHUB_ENV
 
