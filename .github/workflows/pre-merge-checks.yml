name: Pre-merge checks
on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize
  merge_group:

jobs:
  style-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Run Spotless
        run: ./gradlew --no-daemon spotlessCheck

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build Cache
        uses: actions/cache@v3
        with:
          path: |
            .gradle/
            */build/
            !*/build/reports
            !*/build/jacoco
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Run Build
        run: ./gradlew --parallel build -x test -x account-management-integration-tests:test -x spotlessApply -x spotlessCheck

  run-unit-tests:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build Cache
        uses: actions/cache@v3
        with:
          path: |
            .gradle/
            */build/
            !*/build/reports
            !*/build/jacoco
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Run Unit Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew --parallel test jacocoTestReport -x integration-tests:test -x account-management-integration-tests:test -x delivery-receipts-integration-tests:test -x spotlessApply -x spotlessCheck
      - name: Upload Unit Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: unit-test-reports
          path: |
            */build/reports/
            !integration-tests/build/reports/
            !account-management-integration-tests/build/reports/
            !delivery-receipts-integration-tests/build/reports/

          retention-days: 5
      - name: Cache Unit Test Reports
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-unit-test-reports-${{ github.sha }}
          path: |
            */build/jacoco/
            */build/reports/
            !integration-tests/build/jacoco/
            !integration-tests/build/reports/
            !account-management-integration-tests/build/jacoco/
            !account-management-integration-tests/build/reports/
            !delivery-receipts-integration-tests/build/jacoco/
            !delivery-receipts-integration-tests/build/reports/

  run-integration-tests:
    runs-on: ubuntu-latest
    needs:
      - build
    services:
      localstack:
        image: localstack/localstack:3.0.0
        env:
          SERVICES: "lambda, apigateway, iam, ec2, sqs, s3, sts, kms, sns, ssm, events"
          GATEWAY_LISTEN: 0.0.0.0:45678
          LOCALSTACK_HOST: localhost:45678
          TEST_AWS_ACCOUNT_ID: 123456789012
        options: >-
          --add-host "notify.internal:host-gateway"
          --add-host "subscriber.internal:host-gateway"
        ports:
          - 45678:45678
      redis:
        image: redis:6.0.5-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      dynamodb:
        image: amazon/dynamodb-local:1.22.0
        options: >-
          --health-cmd "curl http://localhost:8000"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8000:8000
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build Cache
        uses: actions/cache@v3
        with:
          path: |
            .gradle/
            */build/
            !*/build/reports
            !*/build/jacoco
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Run Integration Tests
        run: |
          ./gradlew :integration-tests:test :integration-tests:jacocoTestReport -x spotlessApply -x spotlessCheck -x composeUp
      - name: Upload Integration Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: integration-test-reports
          path: integration-tests/build/reports/tests/test/
          retention-days: 5
      - name: Cache Test Reports
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-integration-test-reports-${{ github.sha }}
          path: |
            integration-tests/build/jacoco/
            integration-tests/build/reports/

  run-account-management-and-delivery-receipts-tests:
    runs-on: ubuntu-latest
    needs:
      - build
    services:
      localstack:
        image: localstack/localstack:3.0.0
        env:
          SERVICES: "lambda, apigateway, iam, ec2, sqs, s3, sts, kms, sns, ssm, events"
          DEFAULT_REGION: eu-west-2
          GATEWAY_LISTEN: 0.0.0.0:45678
          LOCALSTACK_HOST: localhost:45678
          TEST_AWS_ACCOUNT_ID: 123456789012
          KMS_PROVIDER: local-kms
        options: >-
          --add-host "notify.internal:host-gateway"
          --add-host "subscriber.internal:host-gateway"
        ports:
          - 45678:45678
      redis:
        image: redis:6.0.5-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      dynamodb:
        image: amazon/dynamodb-local:1.22.0
        options: >-
          --health-cmd "curl http://localhost:8000"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8000:8000
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build Cache
        uses: actions/cache@v3
        with:
          path: |
            .gradle/
            */build/
            !*/build/reports
            !*/build/jacoco
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Run Account Management Integration Tests
        run: |
          ./gradlew :account-management-integration-tests:test :account-management-integration-tests:jacocoTestReport -x spotlessApply -x spotlessCheck -x composeUp
      - name: Upload Account Management Integration Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: account-management-integration-test-reports
          path: account-management-integration-tests/build/reports/tests/test/
          retention-days: 5
      - name: Run Delivery Receipts Integration Tests
        run: |
          ./gradlew :delivery-receipts-integration-tests:test :delivery-receipts-integration-tests:jacocoTestReport -x spotlessApply -x spotlessCheck -x composeUp
      - name: Upload Account Management Integration Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: delivery-receipts-integration-test-reports
          path: delivery-receipts-integration-tests/build/reports/tests/test/
          retention-days: 5
      - name: Cache Test Reports
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-am-dr-integration-test-reports-${{ github.sha }}
          path: |
            account-management-integration-tests/build/jacoco/
            account-management-integration-tests/build/reports/
            delivery-receipts-integration-tests/build/jacoco/
            delivery-receipts-integration-tests/build/reports/

  run-sonar-analysis:
    runs-on: ubuntu-latest
    needs:
      - run-unit-tests
      - run-integration-tests
      - run-account-management-and-delivery-receipts-tests
    steps:
      - name: Check out repository code
        if: github.event_name != 'merge_group'
        uses: actions/checkout@v3
      - name: Set up JDK 17
        if: github.event_name != 'merge_group'
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'
      - name: Build Cache
        if: github.event_name != 'merge_group'
        uses: actions/cache@v3
        with:
          path: |
            .gradle/
            */build/
            !*/build/reports
            !*/build/jacoco
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Cache Unit Test Reports
        if: github.event_name != 'merge_group'
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-unit-test-reports-${{ github.sha }}
          path: |
            */build/jacoco/
            */build/reports/
            !integration-tests/build/jacoco/
            !integration-tests/build/reports/
            !account-management-integration-tests/build/jacoco/
            !account-management-integration-tests/build/reports/
            !delivery-receipts-integration-tests/build/jacoco/
            !delivery-receipts-integration-tests/build/reports/
      - name: Cache Integration Test Reports
        if: github.event_name != 'merge_group'
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-integration-test-reports-${{ github.sha }}
          path: |
            integration-tests/build/jacoco/
            integration-tests/build/reports/
      - name: Cache AM DR Integration Test Reports
        if: github.event_name != 'merge_group'
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-am-dr-integration-test-reports-${{ github.sha }}
          path: |
            account-management-integration-tests/build/jacoco/
            account-management-integration-tests/build/reports/
            delivery-receipts-integration-tests/build/jacoco/
            delivery-receipts-integration-tests/build/reports/
      - name: Run SonarCloud Analysis
        if: ${{ github.actor != 'dependabot[bot]' && github.event_name != 'merge_group' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew sonarqube -x test -x account-management-integration-tests:test -x spotlessApply -x spotlessCheck
