---
  name: Build modules & Deploy in DEV
  env:
    AWS_REGION: eu-west-2
    DEPLOYER_ROLE: arn:aws:iam::706615647326:role/deployers/dev-github-actions-publish-to-s3-for-code-signing
    SOURCE_BUCKET: di-auth-lambda-source-20220215165054622300000001
    SIGNING_PROFILE: di_auth_lambda_signing_20220214175605677200000001
    DESTINATION_BUCKET: di-auth-lambda-signed-20220215165009815000000001
    DEV_GHA_DEPLOYER_ROLE: arn:aws:iam::653994557586:role/dev-auth-deploy-pipeline-GitHubActionsRole-QrtGginNnjDD
    DEV_ARTIFACT_BUCKET: dev-auth-deploy-pipeline-githubartifactsourcebuck-ssdefc91xjh6

  on:
    workflow_dispatch:

  jobs:

    build:
      strategy:
        matrix:
          module:
            - account-management-api
            - client-registry-api
            - delivery-receipts-api
            - doc-checking-app-api
            - frontend-api
            - ipv-api
            - oidc-api
            - test-services-api
            - utils
            - auth-external-api
            - interventions-api-stub
            - ticf-cri-stub
      runs-on: ubuntu-latest
      timeout-minutes: 60
      permissions:
        id-token: write
        contents: read
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - name: Set up AWS credentials
          uses: aws-actions/configure-aws-credentials@v4.0.2
          with:
            role-to-assume: ${{ env.DEPLOYER_ROLE }}
            aws-region: ${{ env.AWS_REGION }}
        - name: Set up JDK 17
          uses: actions/setup-java@v4
          with:
            java-version: "17"
            distribution: temurin
        - name: Set up Gradle
          uses: gradle/actions/setup-gradle@v3
        - name: Build ${{ matrix.module }}
          run: ./gradlew --no-daemon :${{ matrix.module }}:buildZip
        - name: Upload ${{ matrix.module }} to source bucket
          working-directory: ${{ matrix.module }}/build/distributions
          run: |
            S3_RESPONSE=`aws s3api put-object \
              --bucket ${{ env.SOURCE_BUCKET }} \
              --key ${{ matrix.module }}/${{ github.sha }}.zip \
              --body ${{ matrix.module }}.zip`
            VERSION=`echo $S3_RESPONSE | jq .VersionId -r`
            echo "VERSION=$VERSION" >> $GITHUB_ENV
        - name: Start signing job for ${{ matrix.module }}
          run: |
            SIGNER_RESPONSE=`aws signer start-signing-job \
              --profile-name "${{ env.SIGNING_PROFILE }}" \
              --source "s3={bucketName=${{ env.SOURCE_BUCKET }},key=${{ matrix.module }}/${{ github.sha }}.zip,version=$VERSION}" \
              --destination "s3={bucketName=${{ env.DESTINATION_BUCKET }},prefix=signed-${{ matrix.module }}-${{ github.sha }}-}"`
            JOB_ID=`echo $SIGNER_RESPONSE | jq .jobId -r`
            aws signer wait successful-signing-job --job-id $JOB_ID

    deploy:
      needs: build
      runs-on: ubuntu-latest
      timeout-minutes: 60
      permissions:
        id-token: write
        contents: read
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Set up AWS credentials
          uses: aws-actions/configure-aws-credentials@v4.0.2
          with:
            role-to-assume: ${{ env.DEV_GHA_DEPLOYER_ROLE }}
            aws-region: ${{ env.AWS_REGION }}

        - name: Download and copy Account Management signed lambda zip
          working-directory: ci/terraform/account-management
          run: |
            aws s3 cp s3://${{ env.DESTINATION_BUCKET }} ./artifacts \
              --recursive --exclude "*" \
              --include "signed-account-management-api-${{ github.sha }}-*"
            mv artifacts/signed-account-management-*.zip artifacts/account-management-api.zip
    
        - name: Upload Account Management Terraform files
          working-directory: ci/terraform
          run: |
            zip -r account-management.zip .
            S3_RESPONSE=`aws s3api put-object \
              --bucket ${{ env.DEV_ARTIFACT_BUCKET }} \
              --key account-management.zip \
              --body account-management.zip \
              --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA,committag=$GIT_TAG,commitmessage=$COMMIT_MSG"`
            VERSION=`echo $S3_RESPONSE | jq .VersionId -r`
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Download and copy Auth External API signed lambda zip
          working-directory: ci/terraform/auth-external-api
          run: |
            aws s3 cp s3://${{ env.DESTINATION_BUCKET }} ./artifacts \
              --recursive --exclude "*" \
              --include "signed-auth-external-api-${{ github.sha }}-*"
            mv artifacts/signed-auth-external-api-*.zip artifacts/auth-external-api.zip
    
        - name: Upload Auth External API Terraform files
          working-directory: ci/terraform
          run: |
            zip -r auth-external-api.zip .
            S3_RESPONSE=`aws s3api put-object \
              --bucket ${{ env.DEV_ARTIFACT_BUCKET }} \
              --key auth-external-api.zip \
              --body auth-external-api.zip \
              --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA,committag=$GIT_TAG,commitmessage=$COMMIT_MSG"`
            VERSION=`echo $S3_RESPONSE | jq .VersionId -r`
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Download and copy Delivery Receipts signed lambda zip
          working-directory: ci/terraform/delivery-receipts
          run: |
            aws s3 cp s3://${{ env.DESTINATION_BUCKET }} ./artifacts \
              --recursive --exclude "*" \
              --include "signed-delivery-receipts-api-${{ github.sha }}-*"
            mv artifacts/signed-delivery-receipts-api-*.zip artifacts/delivery-receipts-api.zip
    
        - name: Upload Delivery Receipts Terraform files
          working-directory: ci/terraform
          run: |
            zip -r delivery-receipts.zip .
            S3_RESPONSE=`aws s3api put-object \
              --bucket ${{ env.DEV_ARTIFACT_BUCKET }} \
              --key delivery-receipts.zip \
              --body delivery-receipts.zip \
              --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA,committag=$GIT_TAG,commitmessage=$COMMIT_MSG"`
            VERSION=`echo $S3_RESPONSE | jq .VersionId -r`
            echo "VERSION=$VERSION" >> $GITHUB_ENV

        - name: Download and copy Account Interventions API Stub signed lambda zip
          working-directory: ci/terraform/interventions-api-stub
          run: |
            aws s3 cp s3://${{ env.DESTINATION_BUCKET }} ./artifacts \
              --recursive --exclude "*" \
              --include "signed-interventions-api-stub-${{ github.sha }}-*"
            mv artifacts/signed-interventions-api-stub-*.zip artifacts/interventions-api-stub.zip
    
        - name: Upload Account Interventions API Stub Terraform files
          working-directory: ci/terraform
          run: |
            zip -r interventions-api-stub.zip .
            S3_RESPONSE=`aws s3api put-object \
              --bucket ${{ env.DEV_ARTIFACT_BUCKET }} \
              --key interventions-api-stub.zip \
              --body interventions-api-stub.zip \
              --metadata "repository=$GITHUB_REPOSITORY,commitsha=$GITHUB_SHA,committag=$GIT_TAG,commitmessage=$COMMIT_MSG"`
            VERSION=`echo $S3_RESPONSE | jq .VersionId -r`
            echo "VERSION=$VERSION" >> $GITHUB_ENV