AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Auth API template for backend

Parameters:
  VpcStackName:
    Description: "The VPC stack name in the account"
    Type: "String"

  CodeSigningConfigArn:
    Type: String
    Description: Asserts that lambdas are signed when deployed.
    Default: "none"

  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"

  Environment:
    Description: "The name of the environment to deploy to"
    Type: "String"
    AllowedValues:
      - build
      - staging
      - production
      - integration
      - dev

  LambdaDeploymentPreference:
    Type: String
    Description: Specifies the configuration to enable gradual Lambda deployments
    Default: None

Conditions:
  UseCodeSigning:
    Fn::Not:
      - Fn::Equals:
          - !Ref CodeSigningConfigArn
          - "none"

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Mappings:
  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    DeploymentPreference:
      Type: !Ref LambdaDeploymentPreference
      Role: !GetAtt CodeDeployServiceRole.Arn
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        JAVA_TOOL_OPTIONS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 '--add-reads=jdk.jfr=ALL-UNNAMED'"
    MemorySize: 1536
    Timeout: 30
    Runtime: java17
    Architectures:
      - x86_64
    KmsKeyArn: !GetAtt MainKmsKey.Arn
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Layers:
      - !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:JAVA_LAYER}}"
        - SecretArn:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              dynatraceSecretArn,
            ]

Resources:
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]
