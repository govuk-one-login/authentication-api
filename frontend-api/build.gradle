plugins {
    id "java"
    id "jacoco"
    id "au.com.dius.pact" version "4.6.17"
}

group = "uk.gov.di.authentication.frontendapi"
version = "unspecified"

configurations {
    compileOnly.extendsFrom(
            lambda,
            sqs,
            ssm,
            sns,
            s3,
            dynamodb,
            kms
            )
    implementation.extendsFrom(
            govuk_notify,
            apache,
            gson,
            nimbus,
            cloudwatch,
            bouncycastle,
            kms,
            jetbrains_annotations
            )
    runtimeOnly.extendsFrom(logging_runtime)
    testImplementation.extendsFrom(
            tests,
            lambda_tests,
            lambda,
            sqs,
            s3,
            kms,
            dynamodb,
            pact_consumer
            )
    testRuntimeOnly.extendsFrom(test_runtime)
}

dependencies {
    implementation project(path: ':shared')
    testImplementation project(":shared-test"),
            'org.wiremock:wiremock-jetty12:3.12.1'
}

test {
    useJUnitPlatform()
    environment "TRACING_ENABLED", "false"
    exclude 'uk/gov/di/authentication/frontendapi/contract/**'
}

var pactDir = "$rootDir/frontend-api/src/test/pact"

task pactConsumerTests (type: Test, group: "verification") {
    useJUnitPlatform()
    include 'uk/gov/di/authentication/frontendapi/contract/**'
    systemProperties['pact.rootDir'] = pactDir
}

pact {
    publish {
        pactDirectory = pactDir
        pactBrokerUrl = "$System.env.PACT_URL".toString() + "?testSource=" + "$System.env.PACT_BROKER_SOURCE_HEADER".toString()
        pactBrokerUsername = "$System.env.PACT_USER".toString()
        pactBrokerPassword = "$System.env.PACT_PASSWORD".toString()
        consumerVersion = "$System.env.CONSUMER_APP_VERSION".toString()
        consumerBranch = "${System.env.GIT_BRANCH}".toString()
        tags = [
            "${System.env.GIT_BRANCH}".toString()
        ]
    }
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into("lib") {
        from configurations.runtimeClasspath
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn "test"
}
