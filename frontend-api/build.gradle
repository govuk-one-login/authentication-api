plugins {
    id "java"
    id "jacoco"
    id "au.com.dius.pact" version "4.6.17"
}

group "uk.gov.di.authentication.frontendapi"
version "unspecified"

configurations.implementation {
    extendsFrom(configurations.govuk_notify)
    extendsFrom(configurations.apache)
    extendsFrom(configurations.gson)
    extendsFrom(configurations.nimbus)
    extendsFrom(configurations.cloudwatch)
    extendsFrom(configurations.bouncycastle)
    extendsFrom(configurations.kms)
    extendsFrom(configurations.jetbrains_annotations)
}

configurations.compileOnly {
    extendsFrom(configurations.lambda)
    extendsFrom(configurations.sqs)
    extendsFrom(configurations.ssm)
    extendsFrom(configurations.sns)
    extendsFrom(configurations.s3)
    extendsFrom(configurations.dynamodb)
    extendsFrom(configurations.kms)
}

configurations.runtimeOnly.extendsFrom(configurations.logging_runtime)

configurations.testImplementation {
    extendsFrom(configurations.tests)
    extendsFrom(configurations.lambda_tests)
    extendsFrom(configurations.lambda)
    extendsFrom(configurations.sqs)
    extendsFrom(configurations.s3)
    extendsFrom(configurations.kms)
    extendsFrom(configurations.dynamodb)
    extendsFrom(configurations.pact_consumer)
}

configurations.testRuntimeOnly.extendsFrom(configurations.test_runtime)


dependencies {
    implementation project(path: ':shared')

    testImplementation project(":shared-test"),
            'org.wiremock:wiremock-jetty12:3.12.0'
}

test {
    useJUnitPlatform()
    environment "TRACING_ENABLED", "false"
    exclude 'uk/gov/di/authentication/frontendapi/contract/**'
}

var pactDir = "$rootDir/frontend-api/src/test/pact"

task pactConsumerTests (type: Test, group: "verification") {
    useJUnitPlatform()
    include 'uk/gov/di/authentication/frontendapi/contract/**'
    systemProperties['pact.rootDir'] = pactDir
}

pact {
    publish {
        pactDirectory = pactDir
        pactBrokerUrl = "$System.env.PACT_URL".toString() + "?testSource=" + "$System.env.PACT_BROKER_SOURCE_HEADER".toString()
        pactBrokerUsername = "$System.env.PACT_USER".toString()
        pactBrokerPassword = "$System.env.PACT_PASSWORD".toString()
        consumerVersion = "$System.env.CONSUMER_APP_VERSION".toString()
        consumerBranch = "${System.env.GIT_BRANCH}".toString()
        tags = [
            "${System.env.GIT_BRANCH}".toString()
        ]
    }
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into("lib") {
        from configurations.runtimeClasspath
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacocoTestReport {
    reports {
        xml.setRequired true
    }
    dependsOn "test"
}
