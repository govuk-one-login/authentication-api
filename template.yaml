AWSTemplateFormatVersion: "2010-09-09"
Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31

Metadata:
  cfn-lint:
    config:
      configure_rules:
        E3031:
          exceptions:
            - none
      ignore_checks:
        - E1011 # FindInMap within FindInMap DefaultValue is currently not working w/ cfn-lint

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to
  VpcStackName:
    Type: String
    Description: The name of the stack used to create the VPC
  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none
  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: nonenonenonenonenone
  LoggingSubscriptionEndpointArn:
    Type: String
    Description: The ARN of the subscription endpoint to send logs to splunk
    Default: "arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython-2"
  LambdaDeploymentPreference:
    Type: String
    Description: Specifies the configuration to enable gradual Lambda deployments
  MinErrorThreshold:
    Type: Number
    Description: Minimum number of errors before error rate alarms can be triggered
    Default: 4

Conditions:
  UsePermissionsBoundary:
    !Not [!Equals [nonenonenonenonenone, !Ref PermissionsBoundary]]
  UseCodeSigning: !Not [!Equals [none, !Ref CodeSigningConfigArn]]
  IsNotDevEnvironment: !Not [!Equals [!Ref Environment, dev]]
  AisAbortOnError:
    !Not [
      !Or [
        !Equals [integration, !Ref Environment],
        !Equals [production, !Ref Environment],
      ],
    ]
  IpvExists:
    !Or [
      !Equals [staging, !Ref Environment],
      !Equals [integration, !Ref Environment],
      !Equals [production, !Ref Environment],
    ]
  UseSpotStub: !Not [!Condition IpvExists]
  EnableProvisionedConcurrency:
    !Or [
      !Equals [build, !Ref Environment],
      !Equals [staging, !Ref Environment],
      !Equals [integration, !Ref Environment],
      !Equals [production, !Ref Environment],
    ]
  IsDevOrBuild:
    !Or [!Equals [dev, !Ref Environment], !Equals [build, !Ref Environment]]
  IsNotIntegration: !Not [!Equals [!Ref Environment, integration]]
  IsNotDevOrProd:
    !Not [
      !Or [
        !Equals [dev, !Ref Environment],
        !Equals [production, !Ref Environment],
      ],
    ]
  IsIntegrationOrProduction:
    !Or [
      !Equals [!Ref Environment, integration],
      !Equals [!Ref Environment, production],
    ]
  IsProduction: !Equals [!Ref Environment, production]
  IsNotProduction: !Not [!Condition IsProduction]
  UseGlobalLogoutTxmaQueue: !Equals [staging, !Ref Environment]
  UseAuthStub:
    !Equals [
      !FindInMap [EnvironmentConfiguration, !Ref Environment, authStubEnabled],
      true,
    ]

Mappings:
  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      dynatraceLayerArn: arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_311_51_20250331-143707_with_collector_java:1
      authApiId: "9il43udl10"
      authExternalApiId: "i5ib7bm0pe"
      authAccountId: "653994557586"
      newauthAccountId: "975050272416"
      authEnvironment: authdev3
      serviceDomain: authdev3.dev.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:653994557586:key/853e9af8-2f07-439d-97da-c72fa5b238e9
      idTokenKeyRsaArn: arn:aws:kms:eu-west-2:653994557586:key/17e5e566-4e99-43b4-ad59-e1ef924a582b
      storageTokenKeyArn: arn:aws:kms:eu-west-2:653994557586:key/cf42638b-73a6-498f-a56f-e7ec341c276b
      orchToAuthKeyArn: arn:aws:kms:eu-west-2:653994557586:key/22649b3a-4a9f-49c8-96ba-a517c49f9f37
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:653994557586:authdev3-back-channel-logout-queue
      docAppBackendUri: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppDomain: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppCriDataV2Endpoint: credentials/issue
      docAppAud: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppAuthorisationUrl: https://dcmaw-cri.build.stubs.account.gov.uk/authorize
      docAppClientId: orch-dev
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:653994557586:key/055d799b-c648-4232-801b-c83aef0f2bd1
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:653994557586:key/3e5dd566-314a-4be8-8976-d8177824f959
      clientRegistryTableKeyArn: arn:aws:kms:eu-west-2:653994557586:key/258b15a8-6157-439e-8018-24c59b91c8c5
      txmaEventEncryptionKeyArn: arn:aws:kms:eu-west-2:816047645251:key/d74787b0-8d11-4dd9-8691-7c0e26856225
      orchToAuthTokenSigningKeyAlias: arn:aws:kms:eu-west-2:653994557586:key/22649b3a-4a9f-49c8-96ba-a517c49f9f37?
      spotRequestQueueKmsArn: arn:aws:kms:eu-west-2:653994557586:key/8a74d461-33b1-455e-9539-3d8ad2916deb
      defaultProvisionedConcurrency: 0
      aisUriSecretId: 6b29b810-e509-4354-9d75-934d0f154d07
      ipvStubDomain: "ipvstub.oidc.authdev3.dev.account.gov.uk"
      authStubEnabled: false
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      dynatraceLayerArn: arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_311_51_20250331-143707_with_collector_java:1
      authApiId: "6of9f4amvg"
      authExternalApiId: "fag06zqnve"
      authAccountId: "761723964695"
      newauthAccountId: "058264536367"
      authEnvironment: build
      serviceDomain: build.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/ca2e4723-7ae8-478d-8fa2-baad3f71f506
      idTokenKeyRsaArn: arn:aws:kms:eu-west-2:761723964695:key/0189356a-b80f-4f12-9f31-60f5b34a574f
      storageTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/5fcebbac-6a3a-4948-9700-e061ef3d308e
      orchToAuthKeyArn: arn:aws:kms:eu-west-2:761723964695:key/1800ecc2-e04d-4cf5-9b4e-72eafa0c71f6
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:761723964695:build-back-channel-logout-queue
      docAppBackendUri: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppDomain: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppCriDataV2Endpoint: credentials/issue
      docAppAud: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppAuthorisationUrl: https://dcmaw-cri.build.stubs.account.gov.uk/authorize
      docAppClientId: orch-build
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/f2603fe5-7d09-4279-a42d-e2363e11efb5
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:761723964695:key/0096ee31-26aa-4c92-bea4-9dd9fa73dcf6
      clientRegistryTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/147435a7-f01d-4ed3-9485-ebe7f72808dd
      txmaEventEncryptionKeyArn: arn:aws:kms:eu-west-2:767397776536:key/4d851d1e-acd1-4c73-a754-617ffd380b3d
      orchToAuthTokenSigningKeyAlias: arn:aws:kms:eu-west-2:761723964695:key/1800ecc2-e04d-4cf5-9b4e-72eafa0c71f6
      spotRequestQueueKmsArn: arn:aws:kms:eu-west-2:761723964695:key/fd8afa13-ccee-4199-9a01-d85483f3431d
      defaultProvisionedConcurrency: 1
      aisUriSecretId: fd6ef1f1-7d31-40ca-978d-2180199141d8
      ipvStubDomain: "ipvstub.oidc.build.account.gov.uk"
      authStubEnabled: false
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      dynatraceLayerArn: arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_311_51_20250331-143707_with_collector_java:1
      authApiId: "1rvwudxmbk"
      authExternalApiId: "rr86yg3r28"
      authAccountId: "758531536632"
      newauthAccountId: "851725205974"
      authEnvironment: staging
      serviceDomain: staging.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:758531536632:key/11af3935-0304-4813-bc16-302ab942c75a
      idTokenKeyRsaArn: arn:aws:kms:eu-west-2:758531536632:key/1d506b73-c506-4cec-bc46-db0ac1a54149
      storageTokenKeyArn: arn:aws:kms:eu-west-2:758531536632:key/01d22c46-bccf-4a2f-bd3b-149fe03f5321
      orchToAuthKeyArn: arn:aws:kms:eu-west-2:758531536632:key/7a18b3e2-b98c-431e-8955-736837ee24cf
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:758531536632:staging-back-channel-logout-queue
      docAppBackendUri: https://api-backend-api.review-b.staging.account.gov.uk
      docAppDomain: https://api.review-b.staging.account.gov.uk
      docAppCriDataV2Endpoint: userinfo/v2
      docAppAud: https://www.review-b.staging.account.gov.uk
      docAppAuthorisationUrl: https://www.review-b.staging.account.gov.uk/dca/oauth2/authorize
      docAppClientId: authOrchestratorDocApp
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:758531536632:key/63ce28d6-5482-4886-933d-33cd27f469d3
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:758531536632:key/00051d8b-de72-4952-baab-3be6460ad844
      clientRegistryTableKeyArn: arn:aws:kms:eu-west-2:758531536632:key/32415ead-d88f-4724-aedf-5fe3ce8ed48e
      txmaEventEncryptionKeyArn: arn:aws:kms:eu-west-2:590183975515:key/c653db36-52fa-475c-8866-e167e3e85761
      orchToAuthTokenSigningKeyAlias: arn:aws:kms:eu-west-2:758531536632:key/7a18b3e2-b98c-431e-8955-736837ee24cf
      spotRequestQueueKmsArn: arn:aws:kms:eu-west-2:758531536632:key/3afafd1f-59f2-4ceb-806c-f67c0c120968
      defaultProvisionedConcurrency: 3
      aisUriSecretId: 2b9a3315-50e9-4970-87e6-b354cc4a2484
      globalLogoutQueueArn: arn:aws:sqs:eu-west-2:178023842775:self-staging-EC-SQS-Output-Queue-orchGlobalLogout
      globalLogoutQueueKmsKeyArn: arn:aws:kms:eu-west-2:178023842775:key/7cf407f9-958e-4039-a095-c46ba0a08d82
      authStubEnabled: false
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      dynatraceLayerArn: arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_311_51_20250331-143707_with_collector_java:1
      authApiId: "k2skqhxed6"
      authExternalApiId: "ivaclg7wrf"
      authAccountId: "761723964695"
      newauthAccountId: "211125600642"
      authEnvironment: integration
      serviceDomain: integration.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/44d26c18-f460-4d6f-b94c-3f356540a055
      idTokenKeyRsaArn: arn:aws:kms:eu-west-2:761723964695:key/6eadd5bf-8a7f-4062-88c4-7774f070df02
      storageTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/6dccb5b3-2754-4c66-ba66-c11f861ad55f
      orchToAuthKeyArn: arn:aws:kms:eu-west-2:761723964695:key/c92ae9b2-2e2e-4476-a7c9-b52010440bc1
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:761723964695:integration-back-channel-logout-queue
      docAppBackendUri: https://api-backend-api.review-b.integration.account.gov.uk
      docAppDomain: https://api.review-b.integration.account.gov.uk
      docAppCriDataV2Endpoint: userinfo/v2
      docAppAud: https://www.review-b.integration.account.gov.uk
      docAppAuthorisationUrl: https://www.review-b.integration.account.gov.uk/dca/oauth2/authorize
      docAppClientId: authOrchestratorDocApp
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/37aea309-c4a2-4ac7-8361-c1789f54df77
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:761723964695:key/031ece8b-a59a-4991-a2aa-98f486c69f60
      clientRegistryTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/f8897cf9-760f-463e-bb27-a86cc9e629de
      txmaEventEncryptionKeyArn: arn:aws:kms:eu-west-2:058264132019:key/d1aefc2a-038d-460f-b6fd-d0ee749d3ad5
      orchToAuthTokenSigningKeyAlias: arn:aws:kms:eu-west-2:761723964695:key/c92ae9b2-2e2e-4476-a7c9-b52010440bc1
      spotRequestQueueKmsArn: arn:aws:kms:eu-west-2:761723964695:key/2c2b295b-4ec7-41dd-b399-a2e98b7b39f9
      defaultProvisionedConcurrency: 1
      aisUriSecretId: ""
      authStubEnabled: false
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      dynatraceLayerArn: arn:aws:lambda:eu-west-2:216552277552:layer:Dynatrace_OneAgent_1_311_51_20250331-143707_with_collector_java:1
      authApiId: "s4gj268zy6"
      authExternalApiId: "crf9dwolp4"
      authAccountId: "172348255554"
      newauthAccountId: "211125303002"
      authEnvironment: production
      serviceDomain: account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:172348255554:key/01c412c6-98de-48b2-9a6d-51f57e8c3d7a
      idTokenKeyRsaArn: arn:aws:kms:eu-west-2:172348255554:key/ce5d0a05-909c-449b-be82-87009f5bef9a
      storageTokenKeyArn: arn:aws:kms:eu-west-2:172348255554:key/0fce68a7-62bd-407d-919e-07f3fd621304
      orchToAuthKeyArn: arn:aws:kms:eu-west-2:172348255554:key/cb986cd8-8ac7-43f1-8a74-15d1b77509d9
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:172348255554:production-back-channel-logout-queue
      docAppBackendUri: https://api-backend-api.review-b.account.gov.uk
      docAppDomain: https://api.review-b.account.gov.uk
      docAppCriDataV2Endpoint: userinfo/v2
      docAppAud: https://www.review-b.account.gov.uk
      docAppAuthorisationUrl: https://www.review-b.account.gov.uk/dca/oauth2/authorize
      docAppClientId: authOrchestratorDocApp
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:172348255554:key/ab10facb-aa4d-47b9-92bb-3974b9585fd4
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:172348255554:key/c6448889-ae6d-4db1-916c-9338a3c2bd1b
      clientRegistryTableKeyArn: arn:aws:kms:eu-west-2:172348255554:key/afefa38f-5797-4722-9969-c7ad5ec6d6fe
      txmaEventEncryptionKeyArn: arn:aws:kms:eu-west-2:533266965190:key/4bc0dac2-f40f-4c3e-9f9e-30549dd8769d
      orchToAuthTokenSigningKeyAlias: arn:aws:kms:eu-west-2:172348255554:key/cb986cd8-8ac7-43f1-8a74-15d1b77509d9
      spotRequestQueueKmsArn: arn:aws:kms:eu-west-2:172348255554:key/4a4d1b21-d38d-4ce3-bf7f-6778423b297b
      defaultProvisionedConcurrency: 3
      aisUriSecretId: ""
      authStubEnabled: false
  ProvisionedConcurrency:
    staging:
      TrustmarkFunction: 1
    production:
      TrustmarkFunction: 1

Globals:
  Function:
    DeploymentPreference:
      Type: !Ref LambdaDeploymentPreference
      Role: !GetAtt CodeDeployServiceRole.Arn
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CONNECTION_BASE_URL: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_CLUSTER_ID: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_TENANT: !Sub
          - "{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}"
          - SecretArn:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                dynatraceSecretArn,
              ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
        OTEL_INSTRUMENTATION_AWS_SDK_EXPERIMENTAL_USE_PROPAGATOR_FOR_MESSAGING: "true"
        JAVA_TOOL_OPTIONS: "-XX:+TieredCompilation -XX:TieredStopAtLevel=1 '--add-reads=jdk.jfr=ALL-UNNAMED'"
    MemorySize: 1536
    Timeout: 30
    Runtime: java17
    Architectures:
      - x86_64
    KmsKeyArn: !GetAtt MainKmsKey.Arn
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Layers:
      - !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          dynatraceLayerArn,
        ]

Resources:
  CodeDeployServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - sts:AssumeRole
            Effect: Allow
            Principal:
              Service:
                - codedeploy.amazonaws.com
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSCodeDeployRoleForLambda
      PermissionsBoundary:
        !If [
          UsePermissionsBoundary,
          !Ref PermissionsBoundary,
          !Ref AWS::NoValue,
        ]

  MainKmskeyAlias:
    Type: "AWS::KMS::Alias"
    Properties:
      AliasName: "alias/mainKmsKey"
      TargetKeyId: !Ref MainKmsKey
  MainKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt Orchestration
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*

  #region Orchestration Session DynamoDB Table

  OrchSessionTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Orch session DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Sid: AllowKeyEncryptDecryptActionstoAuthAccount
            Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - arn:aws:iam::${AuthAccountId}:root
                  - AuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        authAccountId,
                      ]
                - !Sub
                  - arn:aws:iam::${NewAuthAccountId}:root
                  - NewAuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        newauthAccountId,
                      ]
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: "*"

  OrchSessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Orch-Session
      AttributeDefinitions:
        - AttributeName: SessionId
          AttributeType: S
        - AttributeName: InternalCommonSubjectId
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: InternalCommonSubjectIdIndex
          KeySchema:
            - AttributeName: InternalCommonSubjectId
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: SessionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt OrchSessionTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: OrchSessionTable
      ResourcePolicy:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: AllowOrchSessionTableCrossAccountReadAccess
              Effect: Allow
              Action:
                - dynamodb:DescribeTable
                - dynamodb:Get*
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]
            - Sid: AllowOrchSessionTableCrossAccountDeleteAccess
              Effect: Allow
              Action:
                - dynamodb:DeleteItem
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]
            - Sid: AllowOrchSessionTableCrossAccountWriteAccess
              Effect: Allow
              Action:
                - dynamodb:PutItem
                - dynamodb:UpdateItem
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]

  #endregion

  #region AuthUserInfo DynamoDB Table

  AuthUserInfoTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for AuthUserInfo DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  AuthUserInfoTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Auth-User-Info
      AttributeDefinitions:
        - AttributeName: InternalCommonSubjectId
          AttributeType: S
        - AttributeName: ClientSessionId
          AttributeType: S
      KeySchema:
        - AttributeName: InternalCommonSubjectId
          KeyType: HASH
        - AttributeName: ClientSessionId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt AuthUserInfoTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: TimeToExist
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      ResourcePolicy:
        Fn::If:
          - IsNotDevEnvironment
          - PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Deny
                  Principal:
                    AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
                  NotAction:
                    - dynamodb:DescribeTable
                    - dynamodb:DescribeTimeToLive
                    - dynamodb:ListTagsOfResource
                  Resource: "*"
                  Condition:
                    StringNotLike:
                      aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_ApprovedAdministrator*
                    StringLike:
                      aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_*
          - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: AuthUserInfoTable
  #endregion

  #region ClientSession DynamoDB Table
  ClientSessionTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for ClientSession DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Sid: AllowKeyDecryptionAccess
            Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - arn:aws:iam::${AuthAccountId}:root
                  - AuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        authAccountId,
                      ]
                - !Sub
                  - arn:aws:iam::${NewAuthAccountId}:root
                  - NewAuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        newauthAccountId,
                      ]
            Action:
              - kms:Decrypt
            Resource: "*"

  ClientSessionTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Client-Session
      AttributeDefinitions:
        - AttributeName: ClientSessionId
          AttributeType: S
      KeySchema:
        - AttributeName: ClientSessionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt ClientSessionTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      ResourcePolicy:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: AllowClientSessionTableReadAccessPolicy
              Effect: Allow
              Action:
                - dynamodb:DescribeTable
                - dynamodb:Get*
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]
            - Sid: AllowClientSessionTableDeleteAccessPolicy
              Effect: Allow
              Action:
                - dynamodb:DeleteItem
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]
      Tags:
        - Key: Name
          Value: ClientSessionTable
  #endregion

  #region ClientRegistry DynamoDB Table
  ClientRegistryTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Orchestration Client Registry DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Sid: AllowKeyDecryptionAccess
            Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - arn:aws:iam::${AuthAccountId}:root
                  - AuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        authAccountId,
                      ]
                - !Sub
                  - arn:aws:iam::${NewAuthAccountId}:root
                  - NewAuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        newauthAccountId,
                      ]
            Action:
              - kms:Decrypt
            Resource: "*"

  ClientRegistryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-client-registry
      AttributeDefinitions:
        - AttributeName: ClientID
          AttributeType: S
        - AttributeName: ClientName
          AttributeType: S
      KeySchema:
        - AttributeName: ClientID
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ClientNameIndex
          KeySchema:
            - AttributeName: ClientName
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt ClientRegistryTableEncryptionKey.Arn
        SSEType: KMS
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      DeletionProtectionEnabled: true
      ResourcePolicy:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: AllowClientRegistryTableReadAccessPolicy
              Effect: Allow
              Action:
                - dynamodb:DescribeTable
                - dynamodb:Get*
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]
      Tags:
        - Key: Name
          Value: ClientRegistryTable
        - !If
          - IsIntegrationOrProduction
          - Key: BackupFrequency
            Value: Bihourly
          - !Ref AWS::NoValue

  #endregion

  #region OrchIdentityCredentials DynamoDB Table
  OrchIdentityCredentialsTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for OrchIdentityCredentials DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
          - Sid: AllowKeyDecryptionAccess
            Effect: Allow
            Principal:
              AWS:
                - !Sub
                  - arn:aws:iam::${AuthAccountId}:root
                  - AuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        authAccountId,
                      ]
                - !Sub
                  - arn:aws:iam::${NewAuthAccountId}:root
                  - NewAuthAccountId:
                      !FindInMap [
                        EnvironmentConfiguration,
                        !Ref Environment,
                        newauthAccountId,
                      ]
            Action:
              - kms:Decrypt
            Resource: "*"

  OrchIdentityCredentialsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Orch-Identity-Credentials
      AttributeDefinitions:
        - AttributeName: ClientSessionId
          AttributeType: S
      KeySchema:
        - AttributeName: ClientSessionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt OrchIdentityCredentialsTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: OrchIdentityCredentialsTable
      ResourcePolicy:
        PolicyDocument:
          Version: 2012-10-17
          Statement:
            - Sid: AllowOrchIdentityCredentialsTableCrossAccountReadAccess
              Effect: Allow
              Action:
                - dynamodb:DescribeTable
                - dynamodb:Get*
              Resource: "*"
              Principal:
                AWS:
                  - !Sub
                    - arn:aws:iam::${AuthAccountId}:root
                    - AuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          authAccountId,
                        ]
                  - !Sub
                    - arn:aws:iam::${NewAuthAccountId}:root
                    - NewAuthAccountId:
                        !FindInMap [
                          EnvironmentConfiguration,
                          !Ref Environment,
                          newauthAccountId,
                        ]
            - Fn::If:
                - IsNotDevEnvironment
                - Sid: DenyNonAdminTeamRolesAccess
                  Effect: Deny
                  Principal:
                    AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
                  NotAction:
                    - dynamodb:DescribeTable
                    - dynamodb:DescribeTimeToLive
                    - dynamodb:ListTagsOfResource
                  Resource: "*"
                  Condition:
                    StringNotLike:
                      aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_ApprovedAdministrator*
                    StringLike:
                      aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_*
                - !Ref AWS::NoValue
            - Fn::If:
                - IsNotDevEnvironment
                - Sid: DenyAuthAccountNonAdminTeamRolesAccess
                  Effect: Deny
                  Principal:
                    AWS: !Sub
                      - arn:aws:iam::${AuthAccountId}:root
                      - AuthAccountId:
                          !FindInMap [
                            EnvironmentConfiguration,
                            !Ref Environment,
                            authAccountId,
                          ]
                  NotAction:
                    - dynamodb:DescribeTable
                    - dynamodb:DescribeTimeToLive
                    - dynamodb:ListTagsOfResource
                  Resource: "*"
                  Condition:
                    StringNotLike:
                      aws:PrincipalARN: !Sub
                        - arn:aws:iam::${AuthAccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_ApprovedAdministrator*
                        - AuthAccountId:
                            !FindInMap [
                              EnvironmentConfiguration,
                              !Ref Environment,
                              authAccountId,
                            ]
                    StringLike:
                      aws:PrincipalARN: !Sub
                        - arn:aws:iam::${AuthAccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_*
                        - AuthAccountId:
                            !FindInMap [
                              EnvironmentConfiguration,
                              !Ref Environment,
                              authAccountId,
                            ]
                - !Ref AWS::NoValue
  #endregion

  #region RP Public Key DynamoDB Table

  RpPublicKeyTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for RP public key DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  RpPublicKeyCacheTable:
    Type: AWS::DynamoDB::Table
    # checkov:skip=CKV_AWS_28: It would be harmful to restore old keys from a backup of this data, and keys will be fetched if not present anyway.
    Properties:
      TableName: !Sub ${Environment}-RpPublicKeyCache
      AttributeDefinitions:
        - AttributeName: clientId
          AttributeType: S
        - AttributeName: keyId
          AttributeType: S
      KeySchema:
        - AttributeName: clientId
          KeyType: HASH
        - AttributeName: keyId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt RpPublicKeyTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      Tags:
        - Key: Name
          Value: RpPublicKeyCache

  #endregion

  #region State Storage Table

  StateStorageTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Orchestration State storage DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  StateStorageTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-State-Storage
      AttributeDefinitions:
        - AttributeName: PrefixedSessionId
          AttributeType: S
      KeySchema:
        - AttributeName: PrefixedSessionId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt StateStorageTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: StateStorageTable

  #endregion

  #region Doc App Credential DynamoDB Table

  DocAppCredentialTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Doc App Credential DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  DocAppCredentialTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Orch-Doc-App-Credential
      AttributeDefinitions:
        - AttributeName: SubjectID
          AttributeType: S
      KeySchema:
        - AttributeName: SubjectID
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt DocAppCredentialTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: TimeToExist
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      ResourcePolicy:
        Fn::If:
          - IsNotDevEnvironment
          - PolicyDocument:
              Version: 2012-10-17
              Statement:
                - Effect: Deny
                  Principal:
                    AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
                  NotAction:
                    - dynamodb:DescribeTable
                    - dynamodb:DescribeTimeToLive
                    - dynamodb:ListTagsOfResource
                  Resource: "*"
                  Condition:
                    StringNotLike:
                      aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_ApprovedAdministrator*
                    StringLike:
                      aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_*
          - !Ref AWS::NoValue
      Tags:
        - Key: Name
          Value: DocAppCredentialTable

  #endregion

  #region Jwks Cache DynamoDB Table

  JwksCacheTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Jwks Cache DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  JwksCacheTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Jwks-Cache
      AttributeDefinitions:
        - AttributeName: JwksUrl
          AttributeType: S
        - AttributeName: KeyId
          AttributeType: S
      KeySchema:
        - AttributeName: JwksUrl
          KeyType: HASH
        - AttributeName: KeyId
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt JwksCacheTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: JwksCacheTable

  #endregion

  #region Fetch JWKS Lambda

  FetchJwksFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not required
    # checkov:skip=CKV_AWS_117: Lambda needs to exist outside our VPC so default AWS Lambda service VPC is OK
    Properties:
      FunctionName: !Sub ${Environment}-FetchJwksFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.FetchJwksHandler::handleRequest
      DeploymentPreference:
        Alarms:
          - Ref: FetchJwksErrorAnomalyAlarm
      LoggingConfig:
        LogGroup: !Ref FetchJwksFunctionLogGroup
      SnapStart:
        ApplyOn: PublishedVersions
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117

  FetchJwksFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-fetch-jwks-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  FetchJwksSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref FetchJwksFunctionLogGroup

  FetchJwksFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-fetchjwks-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref FetchJwksFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-fetchjwks-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  FetchJwksFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} FetchJwksFunction lambda. ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-fetchjwks-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-fetchjwks-error-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  FetchJwksFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-fetchjwks-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} FetchJwksFunction lambda. ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-FetchJwksFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-FetchJwksFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region Open ID Configuration Lambda

  OpenIdConfigurationFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-OpenIdConfigurationFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.WellknownHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref OpenIdConfigurationFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: OpenIdConfigurationErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - OpenIdConfigurationFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          ENVIRONMENT: !Sub ${Environment}
          AUTH_FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  OpenIdConfigurationFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref OpenIdConfigurationFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/.well-known/openid-configuration"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  OpenIdConfigurationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-openid-configuration-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  OpenIdConfigurationSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref OpenIdConfigurationFunctionLogGroup

  OpenIdConfigurationFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-openid-configuration-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref OpenIdConfigurationFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-openid-configuration-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  OpenIdConfigurationFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} openid-configuration lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-openid-configuration-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-openid-configuration-error-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  OpenIdConfigurationFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-openid-configuration-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} openid-configuration lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-OpenIdConfigurationFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-OpenIdConfigurationFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Trustmark Lambda

  TrustmarkFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-TrustmarkFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.TrustMarkHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref TrustmarkFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: TrustmarkFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - TrustmarkFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          ENVIRONMENT: !Sub ${Environment}
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  TrustmarkFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref TrustmarkFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/trustmark"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  TrustmarkFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-trustmark-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  TrustmarkSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref TrustmarkFunctionLogGroup

  TrustmarkFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-trustmark-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref TrustmarkFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-trustmark-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  TrustmarkFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} trustmark lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-trustmark-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-trustmark-error-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  TrustmarkFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-trustmark-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} trustmark lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-TrustmarkFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-TrustmarkFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Back Channel Logout Request Lambda

  BackChannelLogoutRequestFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: Lambda needs open egress so isn't in VPC
    Properties:
      FunctionName: !Sub ${Environment}-BackChannelLogoutRequestFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.BackChannelLogoutRequestHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref BackChannelLogoutRequestFunctionLogGroup
      Events:
        BackChannelLogoutQueue:
          Type: SQS
          Properties:
            Queue: !GetAtt BackChannelLogoutQueue.Arn
            FunctionResponseTypes:
              - ReportBatchItemFailures
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyArn,
            ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Policies:
        - !Ref IdTokenKmsAccessPolicy
        - !Ref BackChannelLogoutQueueConsumePolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  BackChannelLogoutRequestFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BackChannelLogoutRequestFunction.Alias
      Action: lambda:InvokeFunction
      Principal: sqs.amazonaws.com
      SourceArn:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          backchannelLogoutQueueArn,
        ]

  BackChannelLogoutRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-backchannel-logout-request-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  BackChannelLogoutRequestSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref BackChannelLogoutRequestFunctionLogGroup

  BackChannelLogoutRequestFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-backchannel-logout-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref BackChannelLogoutRequestFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-backchannel-logout-request-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  BackChannelLogoutRequestFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: !If
        - IsIntegrationOrProduction
        - false
        - true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} backchannel logout request lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/OoDyFAE"
      AlarmName: !Sub ${Environment}-backchannel-logout-request-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-backchannel-logout-request-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  BackChannelLogoutRequestFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-backchannel-logout-request-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 25 has been reached in the ${Environment} backchannel logout request lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/OoDyFAE"
      ActionsEnabled: !If
        - IsIntegrationOrProduction
        - false
        - true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 25
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-BackChannelLogoutRequestFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-BackChannelLogoutRequestFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Doc App Callback Lambda

  DocAppCallbackFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-DocAppCallbackFunction
      AutoPublishAlias: latest
      CodeUri: ./doc-checking-app-api/build/distributions/doc-checking-app-api.zip
      Handler: uk.gov.di.authentication.app.lambda.DocAppCallbackHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref DocAppCallbackFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: DocAppCallbackErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - DocAppCallbackFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
          - !Ref HttpsEgressSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          CUSTOM_DOC_APP_CLAIM_ENABLED: true
          DOC_APP_AUTHORISATION_CALLBACK_URI: !Sub
            - https://oidc.${ServiceDomain}/doc-app-callback
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DOC_APP_AUTHORISATION_CLIENT_ID:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppClientId,
            ]
          DOC_APP_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppSigningKeyArn,
            ]
          DOC_APP_BACKEND_URI:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppBackendUri,
            ]
          DOC_APP_CRI_DATA_V2_ENDPOINT:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppCriDataV2Endpoint,
            ]
          DOC_APP_CRI_DATA_ENDPOINT: unused
          DOC_APP_JWKS_URL: !Sub
            - ${DocAppBackendUri}/.well-known/jwks.json
            - DocAppBackendUri:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  docAppBackendUri,
                ]
          DOC_APP_AUD:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, docAppAud]
          DOC_APP_NEW_AUD_CLAIM_ENABLED: true
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          AUTH_FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          REDIS_KEY: session
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          ENVIRONMENT: !Sub ${Environment}
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
      Policies:
        - !Ref OrchDocAppCredentialTableReadAccessPolicy
        - !Ref OrchDocAppCredentialTableWriteAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref DocAppSigningKmsAccessPolicy
        - !Ref OrchSessionTableReadAccessPolicy
        - !Ref ClientSessionTableReadAccessPolicy
        - !Ref OrchAuthCodeTableWriteAccessPolicy
        - !Ref StateStorageTableReadAccessPolicy
        - !Ref CrossBrowserTableReadAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  DocAppCallbackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-doc-app-callback-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  DocAppSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref DocAppCallbackFunctionLogGroup

  DocAppCallbackFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DocAppCallbackFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/doc-app-callback"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  DocAppCallbackFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-doc-app-callback-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref DocAppCallbackFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-doc-app-callback-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  DocAppCallbackFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "20 or more errors have occurred in the ${Environment} doc app callback lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-doc-app-callback-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-doc-app-callback-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 20

  DocAppCallbackFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-doc-app-callback-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} doc app callback lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-DocAppCallbackFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-DocAppCallbackFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region Token Lambda

  TokenFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-TokenFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.TokenHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref TokenFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: TokenFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - TokenFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyArn,
            ]
          EXTERNAL_TOKEN_SIGNING_KEY_RSA_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyRsaArn,
            ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          REDIS_KEY: session
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref IdTokenKmsAccessPolicy
        - !Ref IdTokenKmsRsaAccessPolicy
        - !Ref InvokeFetchJwksHandlerPolicy
        - !Ref RpPublicKeyCacheTableReadWriteAccessPolicy
        - !Ref ClientSessionTableReadAccessPolicy
        - !Ref ClientSessionTableWriteAccessPolicy
        - !Ref OrchAuthCodeTableReadAccessPolicy
        - !Ref OrchAuthCodeTableWriteAccessPolicy
        - !Ref RefreshTokenTableReadWriteAccessPolicy
        - !Ref AccessTokenTableWriteAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  TokenFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref TokenFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/POST/token"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  TokenFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-token-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  TokenSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref TokenFunctionLogGroup

  TokenFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-token-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref TokenFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-token-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  TokenFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} token lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-token-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-token-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  TokenFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-token-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} token lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-TokenFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-TokenFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region Logout Lambda

  LogoutFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-LogoutFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.LogoutHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref LogoutFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: LogoutFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - LogoutFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyArn,
            ]
          EXTERNAL_TOKEN_SIGNING_KEY_RSA_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyRsaArn,
            ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          REDIS_KEY: session
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          BACK_CHANNEL_LOGOUT_QUEUE_URI: !GetAtt BackChannelLogoutQueue.QueueUrl
          AUTH_FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref IdTokenKmsAccessPolicy
        - !Ref IdTokenKmsRsaAccessPolicy
        - !Ref BackChannelLogoutQueueWritePolicy
        - !Ref OrchSessionTableReadAccessPolicy
        - !Ref OrchSessionTableDeleteAccessPolicy
        - !Ref ClientSessionTableReadAccessPolicy
        - !Ref ClientSessionTableDeleteAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  LogoutFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref LogoutFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/logout
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  LogoutFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-logout-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  LogoutFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref LogoutFunctionLogGroup

  LogoutFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-logout-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref LogoutFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-logout-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  LogoutFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} logout lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-logout-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-logout-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  LogoutFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-logout-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} logout lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-LogoutFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-LogoutFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Global Logout Lambda
  GlobalLogoutFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: Lambda is triggered by SQS so DLQ not needed
    Properties:
      FunctionName: !Sub ${Environment}-GlobalLogoutFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.GlobalLogoutHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref GlobalLogoutFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: GlobalLogoutFunctionErrorAnomalyAlarm
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          DYNAMO_ARN_PREFIX: !Sub
            - arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          BACK_CHANNEL_LOGOUT_QUEUE_URI: !GetAtt BackChannelLogoutQueue.QueueUrl
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
      Policies:
        - !Ref OrchSessionTableReadAndDeleteAccessPolicy
        - !Ref ClientSessionTableReadAndDeleteAccessPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref BackChannelLogoutQueueWritePolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !If [
            IsDevOrBuild,
            !Ref GlobalLogoutTestQueueConsumePolicy,
            !If [
              UseGlobalLogoutTxmaQueue,
              !Ref GlobalLogoutTxmaQueueConsumePolicy,
              !Ref AWS::NoValue,
            ],
          ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  GlobalLogoutFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-global-logout-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  GlobalLogoutFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref GlobalLogoutFunctionLogGroup

  GlobalLogoutFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-global-logout-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref GlobalLogoutFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-global-logout-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  GlobalLogoutFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} global logout lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-global-logout-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-global-logout-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  GlobalLogoutFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-global-logout-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} global logout lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-GlobalLogoutFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-GlobalLogoutFunction
            Period: 60
            Stat: Sum
            Unit: Count

  GlobalLogoutTxmaQueueEventSource:
    Condition: UseGlobalLogoutTxmaQueue
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn:
        !FindInMap [
          EnvironmentConfiguration,
          !Ref Environment,
          globalLogoutQueueArn,
        ]
      FunctionName: !GetAtt GlobalLogoutFunction.Arn
      FunctionResponseTypes:
        - ReportBatchItemFailures

  GlobalLogoutTestQueue:
    Condition: IsDevOrBuild
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}-GlobalLogoutTestQueue
      MaximumMessageSize: 2048
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 10
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt GlobalLogoutTestDeadLetterQueue.Arn
        maxReceiveCount: 3
      KmsMasterKeyId: !GetAtt GlobalLogoutTestQueueEncryptionKey.Arn
      KmsDataKeyReusePeriodSeconds: 300

  GlobalLogoutTestDeadLetterQueue:
    Condition: IsDevOrBuild
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}-GlobalLogoutTestDlq
      KmsMasterKeyId: !GetAtt GlobalLogoutTestQueueEncryptionKey.Arn
      KmsDataKeyReusePeriodSeconds: 300
      MessageRetentionPeriod: 259200

  GlobalLogoutTestQueueEncryptionKey:
    Condition: IsDevOrBuild
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for global logout test queue and dlq
      PendingWindowInDays: 30
      KeyUsage: ENCRYPT_DECRYPT
      KeySpec: SYMMETRIC_DEFAULT
      EnableKeyRotation: true

  GlobalLogoutTestQueueEventSource:
    Condition: IsDevOrBuild
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      EventSourceArn: !GetAtt GlobalLogoutTestQueue.Arn
      FunctionName: !GetAtt GlobalLogoutFunction.Arn
      FunctionResponseTypes:
        - ReportBatchItemFailures

  GlobalLogoutTestDLQAlarm:
    Condition: IsDevOrBuild
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-global-logout-test-dlq-alarm
      AlarmDescription: !Sub "${Environment} global logout test DLQ has a message.ACCOUNT: di-orchestration-${Environment}."
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - GlobalLogoutTestDeadLetterQueue
              - QueueName
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
  #endregion

  #region Authentication Callback Lambda

  AuthenticationCallbackFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-AuthenticationCallbackFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.AuthenticationCallbackHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref AuthenticationCallbackFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: AuthenticationCallbackFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - AuthenticationCallbackFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
          - !Ref HttpsEgressSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          ACCOUNT_INTERVENTION_SERVICE_ACTION_ENABLED: true
          ACCOUNT_INTERVENTION_SERVICE_CALL_ENABLED: true
          ACCOUNT_INTERVENTION_SERVICE_URI: !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:::${SecretId}}}"
            - SecretArn: !Ref AccountInterventionsServiceUriSecret
              SecretId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  aisUriSecretId,
                ]
          AUTHENTICATION_BACKEND_URI: !If
            - UseAuthStub
            - "https://authstub.oidc.authdev3.dev.account.gov.uk/"
            - !Sub
              - https://${AuthExternalApiId}-${VpcId}.execute-api.eu-west-2.amazonaws.com/${AuthEnvironment}/
              - AuthExternalApiId:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    authExternalApiId,
                  ]
                VpcId: !ImportValue vpc-ExecuteApiGatewayEndpointId
                AuthEnvironment:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    authEnvironment,
                  ]
          ACCOUNT_INTERVENTIONS_ERROR_METRIC_NAME: "AISException"
          BACK_CHANNEL_LOGOUT_QUEUE_URI: !GetAtt BackChannelLogoutQueue.QueueUrl
          CREDENTIAL_STORE_URI: !Sub
            - https://credential-store.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          IDENTITY_ENABLED: true
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          IPV_AUDIENCE: !If
            - IpvExists
            - !Sub
              - https://identity.${ServiceDomain}
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          IPV_AUTHORISATION_CALLBACK_URI: !Sub
            - https://oidc.${ServiceDomain}/ipv-callback
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          IPV_AUTHORISATION_CLIENT_ID: authOrchestrator
          IPV_AUTHORISATION_URI: !If
            - IpvExists
            - !Sub
              - https://identity.${ServiceDomain}/oauth2/authorize
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}/authorize
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          IPV_TOKEN_SIGNING_KEY_ALIAS: !Ref OrchIPVTokenSigningKmsKeyAlias
          IPV_JWKS_URL: !If
            - IpvExists
            - !Sub
              - https://api.identity.${ServiceDomain}/.well-known/jwks.json
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}/.well-known/jwks.json
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          ORCH_CLIENT_ID: orchestrationAuth
          ORCH_TO_AUTH_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              orchToAuthKeyArn,
            ]
          REDIS_KEY: session
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          AUTH_FRONTEND_BASE_URL: !If
            - UseAuthStub
            - "https://authstub.oidc.authdev3.dev.account.gov.uk/"
            - !Sub
              - https://signin.${ServiceDomain}/
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
          ACCOUNT_INTERVENTION_SERVICE_ABORT_ON_ERROR:
            !If [AisAbortOnError, true, false]
          STORAGE_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              storageTokenKeyArn,
            ]
          SEND_STORAGE_TOKEN_TO_IPV_ENABLED: true
          JWK_CACHE_EXPIRATION_IN_SECONDS: 300
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref AuthUserInfoTableReadWriteAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref StorageTokenSigningKmsAccessPolicy
        - !Ref IpvTokenSigningKmsAccessPolicy
        - !Ref OrchToAuthSigningKmsAccessPolicy
        - !Ref AccountInterventionsServiceUriSecretAccessPolicy
        - !Ref OrchSessionTableReadWriteAndDeleteAccessPolicy
        - !Ref ClientSessionTableReadWriteAndDeleteAccessPolicy
        - !Ref OrchAuthCodeTableWriteAccessPolicy
        - !Ref StateStorageTableReadWriteAccessPolicy
        - !Ref JwksCacheTableReadWriteAccessPolicy
        - !Ref CrossBrowserTableReadWriteAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  AuthenticationCallbackFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AuthenticationCallbackFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/orchestration-redirect"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  AuthenticationCallbackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-authentication-callback-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  AuthenticationCallbackSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref AuthenticationCallbackFunctionLogGroup

  AuthenticationCallbackFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-authentication-callback-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref AuthenticationCallbackFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-authentication-callback-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  AuthenticationCallbackFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "20 or more errors have occurred in the ${Environment} authentication callback lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-authentication-callback-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-authentication-callback-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 20

  AuthenticationCallbackFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-authentication-callback-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} authentication callback lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthenticationCallbackFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthenticationCallbackFunction
            Period: 60
            Stat: Sum
            Unit: Count

  AuthenticationCallbackAisErrorFailOpenMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-ais-error-fail-open
      FilterPattern: '{$.AISException = 1 && $.AbortOnError = "false"}'
      LogGroupName: !Ref AuthenticationCallbackFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-ais-error-fail-open-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  AuthenticationCallbackAisErrorFailOpenAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more Account Intervention Service errors have occurred in ${Environment}-AuthenticationCallbackFunction. Assuming no intervention and continuing with user journey. ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-authentication-callback-ais-error-fail-open-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-ais-error-fail-open-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  AuthenticationCallbackAisErrorAbortMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-ais-error-abort
      FilterPattern: '{$.AISException = 1 && $.AbortOnError = "true"}'
      LogGroupName: !Ref AuthenticationCallbackFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-ais-error-abort-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  AuthenticationCallbackAisErrorAbortAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more Account Intervention Service errors have occurred in ${Environment}-AuthenticationCallbackFunction. Aborting user journey - P1 alarm. ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/l/cp/7Z2cm5rQ"
      AlarmName: !Sub ${Environment}-authentication-callback-ais-error-abort-p1-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-ais-error-abort-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  #endregion

  #region Jwks Lambda

  JwksFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-JwksFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.JwksHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref JwksFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: JwksFunctionErrorAnomalyAlarm
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyArn,
            ]
          EXTERNAL_TOKEN_SIGNING_KEY_RSA_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyRsaArn,
            ]
          DOC_APP_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppSigningKeyArn,
            ]
      Policies:
        - !Ref IdTokenKmsAccessPolicy
        - !Ref IdTokenKmsRsaAccessPolicy
        - !Ref DocAppSigningKmsAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  JwksFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref JwksFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/.well-known/jwks.json"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  JwksFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-jwks-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  JwksSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref JwksFunctionLogGroup

  JwksFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-jwks-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref JwksFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-jwks-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  JwksFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} jwks lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-jwks-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-jwks-error-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  JwksFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-jwks-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} jwks lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-JwksFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-JwksFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region IPV Jwks Lambda
  IpvJwksFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-IpvJwksFunction
      AutoPublishAlias: latest
      CodeUri: ./ipv-api/build/distributions/ipv-api.zip
      Handler: uk.gov.di.authentication.ipv.lambda.IpvJwksHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref IpvJwksFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: IpvJwksFunctionErrorAnomalyAlarm
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          IPV_TOKEN_SIGNING_KEY_ALIAS: !Ref OrchIPVTokenSigningKmsKeyAlias
      Policies:
        - !Ref IpvTokenSigningKmsAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  IpvJwksFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IpvJwksFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/.well-known/ipv-jwks.json"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  IpvJwksFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-ipv-jwks-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  IpvJwksSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref IpvJwksFunctionLogGroup

  IpvJwksFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-ipv-jwks-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref IpvJwksFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-ipv-jwks-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  IpvJwksFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-ipv-jwks-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} ipv jwks lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-IpvJwksFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-IpvJwksFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Authorisation Lambda

  AuthorisationFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-AuthorisationFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.AuthorisationHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref AuthorisationFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: AuthorisationFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - AuthorisationFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
          - !Ref HttpsEgressSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          CUSTOM_DOC_APP_CLAIM_ENABLED: true
          DOC_APP_AUD:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, docAppAud]
          DOC_APP_AUTHORISATION_CALLBACK_URI: !Sub
            - https://oidc.${ServiceDomain}/doc-app-callback
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DOC_APP_AUTHORISATION_CLIENT_ID:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppClientId,
            ]
          DOC_APP_AUTHORISATION_URI:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppAuthorisationUrl,
            ]
          DOC_APP_DOMAIN:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppDomain,
            ]
          DOC_APP_JWKS_URL: !Sub
            - ${DocAppBackendUri}/.well-known/jwks.json
            - DocAppBackendUri:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  docAppBackendUri,
                ]
          DOC_APP_NEW_AUD_CLAIM_ENABLED: true
          DOC_APP_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              docAppSigningKeyArn,
            ]
          DOMAIN_NAME:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              serviceDomain,
            ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyArn,
            ]
          IDENTITY_ENABLED: true
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          AUTH_FRONTEND_BASE_URL: !If
            - UseAuthStub
            - "https://authstub.oidc.authdev3.dev.account.gov.uk/"
            - !Sub
              - https://signin.${ServiceDomain}/
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          OIDC_SERVICE_DOMAIN: !Sub
            - oidc.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          ORCH_CLIENT_ID: orchestrationAuth
          ORCH_REDIRECT_URI: !Sub
            - https://oidc.${ServiceDomain}/orchestration-redirect
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          ORCH_TO_AUTH_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              orchToAuthKeyArn,
            ]
          ORCH_TO_AUTH_ENCRYPTION_KEY_PARAM: !If
            - UseAuthStub
            - !Sub /orch-stubs/${Environment}-auth-stub-auth-public-encryption-key
            - !Sub ${Environment}-auth-public-encryption-key
          REDIS_KEY: session
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          TXMA_AUDIT_ENCODED_ENABLED: true
          JWK_CACHE_EXPIRATION_IN_SECONDS: 300

      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref IdTokenKmsAccessPolicy
        - !Ref DocAppSigningKmsAccessPolicy
        - !Ref OrchToAuthSigningKmsAccessPolicy
        - !Ref AuthPublicEncryptionKeyAccessPolicy
        - !Ref IpvCapacityAccessPolicy
        - !Ref InvokeFetchJwksHandlerPolicy
        - !Ref RpPublicKeyCacheTableReadWriteAccessPolicy
        - !Ref OrchSessionTableReadWriteAndDeleteAccessPolicy
        - !Ref ClientSessionTableWriteAccessPolicy
        - !Ref StateStorageTableWriteAccessPolicy
        - !Ref ClientRateLimitTableReadWriteAccessPolicy
        - !Ref JwksCacheTableReadWriteAccessPolicy
        - !Ref CrossBrowserTableWriteAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  AuthorisationFunctionCrossAccountGetPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AuthorisationFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/authorize"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  AuthorisationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-authorisation-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  AuthorisationSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref AuthorisationFunctionLogGroup

  AuthorisationFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-authorisation-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref AuthorisationFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-authorisation-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  AuthorisationFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} authorisation lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/PADNHwE"
      AlarmName: !Sub ${Environment}-authorisation-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-authorisation-error-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  AuthorisationFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-authorisation-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} authorisation lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthorisationFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthorisationFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region User Info Function

  UserInfoFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-UserInfoFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.UserInfoHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref UserInfoFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: UserInfoFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - UserInfoFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          IDENTITY_ENABLED: true # Note that this sets whether the ipv api is turned on or not, it is not an indicator of whether a full identity journey can be completed
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyArn,
            ]
          EXTERNAL_TOKEN_SIGNING_KEY_RSA_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              idTokenKeyRsaArn,
            ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          REDIS_KEY: session
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
      Policies:
        - !Ref OrchIdentityCredentialsTableReadAccessPolicy
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref OrchDocAppCredentialTableReadAccessPolicy
        - !Ref AuthUserInfoTableReadAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref IdTokenKmsAccessPolicy
        - !Ref IdTokenKmsRsaAccessPolicy
        - !Ref AccessTokenTableReadAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  UserInfoFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref UserInfoFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/userinfo"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  UserInfoFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-userinfo-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  UserInfoFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref UserInfoFunctionLogGroup

  UserInfoFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-userinfo-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref UserInfoFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-userinfo-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  UserInfoFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} userinfo lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-userinfo-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-userinfo-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  UserInfoFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-userinfo-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} userinfo lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-UserInfoFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-UserInfoFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region Auth Code Function

  AuthCodeFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-AuthCodeFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.AuthCodeHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref AuthCodeFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: AuthCodeFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - AuthCodeFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          REDIS_KEY: session
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref OrchSessionTableReadAccessPolicy
        - !Ref OrchSessionTableWriteAccessPolicy
        - !Ref ClientSessionTableReadAccessPolicy
        - !Ref AuthUserInfoTableReadAccessPolicy
        - !Ref OrchAuthCodeTableWriteAccessPolicy
        - !Ref CrossBrowserTableWriteAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  AuthCodeFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref AuthCodeFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/auth-code"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  AuthCodeFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-auth-code-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  AuthCodeFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref AuthCodeFunctionLogGroup

  AuthCodeFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-auth-code-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref AuthCodeFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-auth-code-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  AuthCodeFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} auth code lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-auth-code-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-auth-code-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  AuthCodeFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-auth-code-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} auth code lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthCodeFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthCodeFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region Update Client Config Lambda

  UpdateClientConfigFunction:
    Type: AWS::Serverless::Function
    Condition: IsNotProduction
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-UpdateClientConfigFunction
      AutoPublishAlias: latest
      CodeUri: ./client-registry-api/build/distributions/client-registry-api.zip
      Handler: uk.gov.di.authentication.clientregistry.lambda.UpdateClientConfigHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref UpdateClientConfigFunctionLogGroup
      DeploymentPreference:
        Alarms:
          # I have used the full Fn::If function otherwise SAM validate is unhappy
          # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-deploymentpreference.html#:~:text=DeploymentPreference%20with%20Fn%3A%3AIf%20intrinsic%20function
          Fn::If:
            - IsNotProduction
            - - !Ref UpdateClientConfigFunctionErrorAnomalyAlarm
            - - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref ClientRegistryTableWriteAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  UpdateClientConfigFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Condition: IsNotProduction
    Properties:
      FunctionName: !Ref UpdateClientConfigFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/PUT/connect/register/{clientId}"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  UpdateClientConfigFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsNotProduction
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-update-client-config-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  UpdateClientConfigFunctionSubscriptionFilter:
    Condition: IsNotDevOrProd
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref UpdateClientConfigFunctionLogGroup

  UpdateClientConfigFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Condition: IsNotProduction
    Properties:
      FilterName: !Sub ${Environment}-update-client-config-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref UpdateClientConfigFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-update-client-config-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  UpdateClientConfigFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotProduction
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} update client config lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-update-client-config-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-update-client-config-error-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  UpdateClientConfigFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotProduction
    Properties:
      AlarmName: !Sub ${Environment}-update-client-config-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} update client config lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-UpdateClientConfigFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-UpdateClientConfigFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Client Registration Function
  ClientRegistrationFunction:
    Type: AWS::Serverless::Function
    Condition: IsNotProduction
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-ClientRegistrationFunction
      AutoPublishAlias: latest
      CodeUri: ./client-registry-api/build/distributions/client-registry-api.zip
      Handler: uk.gov.di.authentication.clientregistry.lambda.ClientRegistrationHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref ClientRegistrationFunctionLogGroup
      DeploymentPreference:
        Alarms:
          # I have used the full Fn::If function otherwise SAM validate is unhappy
          # https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-function-deploymentpreference.html#:~:text=DeploymentPreference%20with%20Fn%3A%3AIf%20intrinsic%20function
          Fn::If:
            - IsNotProduction
            - - !Ref ClientRegistrationFunctionErrorAnomalyAlarm
            - - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref ClientRegistryTableWriteAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  ClientRegistrationFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Condition: IsNotProduction
    Properties:
      FunctionName: !Ref ClientRegistrationFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - "arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/POST/connect/register"
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  ClientRegistrationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Condition: IsNotProduction
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-register-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  ClientRegistrationFunctionSubscriptionFilter:
    Condition: IsNotDevOrProd
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref ClientRegistrationFunctionLogGroup

  ClientRegistrationFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Condition: IsNotProduction
    Properties:
      FilterName: !Sub ${Environment}-register-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref ClientRegistrationFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-register-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  ClientRegistrationFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotProduction
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} register lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-register-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-register-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  ClientRegistrationFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotProduction
    Properties:
      AlarmName: !Sub ${Environment}-register-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} register lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-ClientRegistrationFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-ClientRegistrationFunction
            Period: 60
            Stat: Sum
            Unit: Count

  #endregion

  #region IPV Callback Lambda

  IpvCallbackFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-IpvCallbackFunction
      AutoPublishAlias: latest
      CodeUri: ./ipv-api/build/distributions/ipv-api.zip
      Handler: uk.gov.di.authentication.ipv.lambda.IPVCallbackHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref IpvCallbackFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: IpvCallbackFunctionErrorAnomalyAlarm
      ProvisionedConcurrencyConfig: !If
        - EnableProvisionedConcurrency
        - ProvisionedConcurrentExecutions: !FindInMap
            - ProvisionedConcurrency
            - !Ref Environment
            - IpvCallbackFunction
            - DefaultValue:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  defaultProvisionedConcurrency,
                ]
        - !Ref AWS::NoValue
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
          - !Ref HttpsEgressSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          IDENTITY_ENABLED: true # Note that this sets whether the ipv api is turned on or not, it is not an indicator of whether a full identity journey can be completed
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          REDIS_KEY: session
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          AUTH_FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          ACCOUNT_INTERVENTION_SERVICE_ACTION_ENABLED: true
          ACCOUNT_INTERVENTION_SERVICE_CALL_ENABLED: true
          ACCOUNT_INTERVENTIONS_ERROR_METRIC_NAME: "AISException"
          ACCOUNT_INTERVENTION_SERVICE_URI: !Sub
            - "{{resolve:secretsmanager:${SecretArn}:SecretString:::${SecretId}}}"
            - SecretArn: !Ref AccountInterventionsServiceUriSecret
              SecretId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  aisUriSecretId,
                ]
          ACCOUNT_INTERVENTION_SERVICE_ABORT_ON_ERROR:
            !If [AisAbortOnError, true, false]
          IPV_AUDIENCE: !If
            - IpvExists
            - !Sub
              - https://identity.${ServiceDomain}
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          IPV_AUTHORISATION_CALLBACK_URI: !If
            - IpvExists
            - !Sub
              - https://oidc.${ServiceDomain}/ipv-callback
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}/ipv-callback
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          IPV_AUTHORISATION_CLIENT_ID: authOrchestrator
          IPV_AUTHORISATION_URI: !If
            - IpvExists
            - !Sub
              - https://identity.${ServiceDomain}/oauth2/authorize
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}/authorize
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          IPV_BACKEND_URI: !If
            - IpvExists
            - !Sub
              - https://api.identity.${ServiceDomain}
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          IPV_TOKEN_SIGNING_KEY_ALIAS: !Ref OrchIPVTokenSigningKmsKeyAlias
          IPV_JWKS_URL: !If
            - IpvExists
            - !Sub
              - https://identity.${ServiceDomain}/.well-known/jwks.json
              - ServiceDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    serviceDomain,
                  ]
            - !Sub
              - https://${ipvStubDomain}/.well-known/jwks.json
              - ipvStubDomain:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    ipvStubDomain,
                  ]
          SPOT_QUEUE_URL: !If
            - IpvExists
            - !Sub
              - https://sqs.eu-west-2.amazonaws.com/${AccountId}/${AuthEnvironment}-spot-request-queue
              - AccountId:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    authAccountId,
                  ]
                AuthEnvironment:
                  !FindInMap [
                    EnvironmentConfiguration,
                    !Ref Environment,
                    authEnvironment,
                  ]
            - !GetAtt StubSpotRequestQueue.QueueUrl
          JWK_CACHE_EXPIRATION_IN_SECONDS: 300
      Policies:
        - !Ref OrchIdentityCredentialsTableReadAndWriteAccessPolicy
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref RedisParametersAccessPolicy
        - !Ref IpvTokenSigningKmsAccessPolicy
        - !Ref SpotRequestQueueWritePolicy
        - !Ref AccountInterventionsServiceUriSecretAccessPolicy
        - !Ref OrchSessionTableReadWriteAndDeleteAccessPolicy
        - !Ref AuthUserInfoTableReadAccessPolicy
        - !Ref ClientSessionTableReadAndDeleteAccessPolicy
        - !Ref OrchAuthCodeTableWriteAccessPolicy
        - !Ref StateStorageTableReadAccessPolicy
        - !Ref CrossBrowserTableReadAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  IpvCallbackFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref IpvCallbackFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/ipv-callback
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  IpvCallbackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-ipv-callback-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  IpvCallbackFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref IpvCallbackFunctionLogGroup

  IpvCallbackFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-ipv-callback-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref IpvCallbackFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-ipv-callback-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  IpvCallbackFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "20 or more errors have occurred in the ${Environment} ipv-callback lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-ipv-callback-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-ipv-callback-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 20

  IpvCallbackFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-ipv-callback-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} ipv-callback lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-IpvCallbackFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-IpvCallbackFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  # region Manual Update Client Registry Lambda

  ManualUpdateClientRegistryFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-ManualUpdateClientRegistryFunction
      AutoPublishAlias: latest
      CodeUri: ./client-registry-api/build/distributions/client-registry-api.zip
      Handler: uk.gov.di.authentication.clientregistry.lambda.ManualUpdateClientRegistryHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref ManualUpdateClientRegistryFunctionLogGroup
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
      Policies:
        - !Ref ClientRegistryTableReadAccessPolicy
        - !Ref ClientRegistryTableWriteAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  ManualUpdateClientRegistryFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-manual-update-client-registry-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  ManualUpdateClientRegistryFunctionManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: IsNotProduction
    Properties:
      ManagedPolicyName: ManualUpdateClientRegistryFunctionManagedPolicy
      Description: Allows invoking the ManualUpdateClientRegistry Lambda
      Path: /runbooks/
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
              - lambda:GetFunction
            Resource:
              - !Sub arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:${Environment}-ManualUpdateClientRegistryFunction

  ManualUpdateClientRegistryFunctionInvokeRole:
    Type: AWS::IAM::Role
    Condition: IsNotProduction
    Properties:
      RoleName: !Sub ${AWS::StackName}-RunbookManualUpdateClientRegistryRole
      Description: "This role allows approved support team to perform updates to client registry"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: "sts:AssumeRole"
            Condition:
              ArnLike:
                aws:PrincipalARN: !Sub arn:aws:iam::${AWS::AccountId}:role/aws-reserved/sso.amazonaws.com/*/AWSReservedSSO_ApprovedServiceSupport*
      ManagedPolicyArns:
        - !Ref ManualUpdateClientRegistryFunctionManagedPolicy
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      MaxSessionDuration: 43200
      Path: /runbooks/

  # endregion

  #region Stub SPOT Request Queue
  StubSpotRequestQueueKey:
    Type: AWS::KMS::Key
    Condition: UseSpotStub
    Properties:
      Description: "Key used to encrypt Stub SPOT request queue"
      KeySpec: SYMMETRIC_DEFAULT
      KeyUsage: ENCRYPT_DECRYPT
      EnableKeyRotation: true

  StubSpotRequestQueue:
    Type: AWS::SQS::Queue
    Condition: UseSpotStub
    Properties:
      QueueName: !Sub ${Environment}-stub-spot-request-queue
      MaximumMessageSize: 256000
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 10
      VisibilityTimeout: 60
      KmsMasterKeyId: !Ref StubSpotRequestQueueKey
      KmsDataKeyReusePeriodSeconds: 300
  #endregion

  #region SPOT Response Lambda

  SpotResponseFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-SpotResponseFunction
      AutoPublishAlias: latest
      CodeUri: ./ipv-api/build/distributions/ipv-api.zip
      Handler: uk.gov.di.authentication.ipv.lambda.SPOTResponseHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref SpotResponseFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: SpotResponseFunctionErrorAnomalyAlarm
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          AUTH_FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}
            - ServiceDomain:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  serviceDomain,
                ]
          DYNAMO_ARN_PREFIX: !Sub
            - "arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-"
            - AccountId:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authAccountId,
                ]
              AuthEnvironment:
                !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  authEnvironment,
                ]
      Policies:
        - !Ref OrchIdentityCredentialsTableReadAccessPolicy
        - !Ref OrchIdentityCredentialsTableWriteAccessPolicy
        - !Ref OrchIdentityCredentialsTableDeleteAccessPolicy
        - !Ref TxmaQueueSendPermissionPolicy
        - !Ref SpotResponseQueueConsumePolicy
      SnapStart:
        ApplyOn: PublishedVersions
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  SpotResponseQueueEventMapping:
    Type: AWS::Lambda::EventSourceMapping
    Properties:
      Enabled: true
      BatchSize: 1
      EventSourceArn: !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString}}"
        - SecretArn: !Ref SpotResponseQueueArnSecret
      FunctionName: !Ref SpotResponseFunction.Alias

  SpotResponseFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-spot-response-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  SpotResponseFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref SpotResponseFunctionLogGroup

  SpotResponseFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-spot-response-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref SpotResponseFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-spot-response-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  SpotResponseFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} spot response lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-spot-response-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-spot-response-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  SpotResponseFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-spot-response-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} spot response lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-SpotResponseFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-SpotResponseFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  #region Back Channel Logout Queue

  BackChannelLogoutQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}-BackChannelLogoutQueue
      MaximumMessageSize: 2048
      MessageRetentionPeriod: 1209600
      ReceiveMessageWaitTimeSeconds: 10
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt BackChannelLogoutDeadLetterQueue.Arn
        maxReceiveCount: 3
      KmsMasterKeyId: !GetAtt BackChannelLogoutQueueEncryptionKey.Arn
      KmsDataKeyReusePeriodSeconds: 300

  BackChannelLogoutDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub ${Environment}-BackChannelLogoutDlq
      KmsMasterKeyId: !GetAtt BackChannelLogoutQueueEncryptionKey.Arn
      KmsDataKeyReusePeriodSeconds: 300
      MessageRetentionPeriod: 259200

  BackChannelLogoutQueueEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for back channel logout queue and dlq
      PendingWindowInDays: 30
      KeyUsage: ENCRYPT_DECRYPT
      KeySpec: SYMMETRIC_DEFAULT
      EnableKeyRotation: true

  BackChannelLogoutDLQAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotIntegration
    Properties:
      AlarmName: !Sub ${Environment}-backchannel-logout-dlq-alarm
      AlarmDescription: !Sub "${Environment} backchannel logout DLQ has 5 or more messages.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/spaces/Orch/pages/5292228639/Runbook+Backchannel+Logout+DLQ+Alarm"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      Namespace: AWS/SQS
      MetricName: ApproximateNumberOfMessagesVisible
      Dimensions:
        - Name: QueueName
          Value:
            Fn::GetAtt:
              - BackChannelLogoutDeadLetterQueue
              - QueueName
      Statistic: Maximum
      Period: 300
      EvaluationPeriods: 1
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
  #endregion

  #region Storage Token Jwk Lambda

  StorageTokenJwkFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_115: Reserved concurrency will be looked into in ATO-657
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    Properties:
      FunctionName: !Sub ${Environment}-StorageTokenJwkFunction
      AutoPublishAlias: latest
      CodeUri: ./oidc-api/build/distributions/oidc-api.zip
      Handler: uk.gov.di.authentication.oidc.lambda.StorageTokenJwkHandler::handleRequest
      LoggingConfig:
        LogGroup: !Ref StorageTokenJwkFunctionLogGroup
      DeploymentPreference:
        Alarms:
          - Ref: StorageTokenJwkFunctionErrorAnomalyAlarm
      VpcConfig:
        SecurityGroupIds:
          - !Ref LambdaSecurityGroup
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
          - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC
      SnapStart:
        ApplyOn: PublishedVersions
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          STORAGE_TOKEN_SIGNING_KEY_ALIAS:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              storageTokenKeyArn,
            ]
      Policies:
        - !Ref StorageTokenSigningKmsAccessPolicy
      Tags:
        CheckovRulesToSkip: CKV_AWS_115.CKV_AWS_116.CKV_AWS_173

  StorageTokenJwkFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref StorageTokenJwkFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/.well-known/storage-token-jwk.json
        - AccountId:
            !FindInMap [
              EnvironmentConfiguration,
              !Ref Environment,
              authAccountId,
            ]
          ApiId:
            !FindInMap [EnvironmentConfiguration, !Ref Environment, authApiId]

  StorageTokenJwkFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-storage-token-jwk-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 30

  StorageTokenJwkFunctionSubscriptionFilter:
    Condition: IsNotDevEnvironment
    Type: AWS::Logs::SubscriptionFilter
    Properties:
      DestinationArn: !Ref LoggingSubscriptionEndpointArn
      FilterPattern: ""
      LogGroupName: !Ref StorageTokenJwkFunctionLogGroup

  StorageTokenJwkFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-storage-token-jwk-request-errors
      FilterPattern: '{($.level = "ERROR")}'
      LogGroupName: !Ref StorageTokenJwkFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-storage-token-jwk-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  StorageTokenJwkFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} storage-token-jwk lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-storage-token-jwk-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: !Sub ${Environment}-storage-token-jwk-count
      Namespace: LambdaErrorsNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  StorageTokenJwkFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-storage-token-jwk-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} storage-token-jwk lambda.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      ActionsEnabled: true
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref OrchProdSlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: !Sub "IF(m2 >= ${MinErrorThreshold}, m2/m1*100, 0)"
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-StorageTokenJwkFunction
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-StorageTokenJwkFunction
            Period: 60
            Stat: Sum
            Unit: Count
  #endregion

  AccountInterventionsServiceUriSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: account_interventions_service_uri
      KmsKeyId: !GetAtt MainKmsKey.Arn

  SpotResponseQueueArnSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: spot_response_queue_arn
      KmsKeyId: !GetAtt MainKmsKey.Arn

  SpotResponseQueueKeyArnSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: spot_response_queue_key_arn
      KmsKeyId: !GetAtt MainKmsKey.Arn

  PagerDutyUrlSecret:
    Condition: IsProduction
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: pager_duty_url
      KmsKeyId: !GetAtt MainKmsKey.Arn

  HttpsEgressSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow egress to external services
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outgoing HTTPS requests from security group
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security Group permissions ruleset
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      SecurityGroupEgress:
        - DestinationSecurityGroupId:
            Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
          Description: Allow outbound traffic to vpc endpoints
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 10.0.0.0/16
          Description: Allow outbound traffic to vpc endpoints
          IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
        - DestinationPrefixListId: pl-b3a742da
          Description: Allow traffic to dynamoDb
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443

  #region Policies

  OrchSessionTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt OrchSessionTableEncryptionKey.Arn

  OrchSessionTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchSessionTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt OrchSessionTableEncryptionKey.Arn

  # This combined read and write policy is required because we've reached the managed polices per role quota limit (20). Ticket raised to requst quota increase (ATO-1056)
  OrchSessionTableReadAndWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt OrchSessionTableEncryptionKey.Arn
  OrchSessionTableReadAndDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableIndexQueryAccess
            Effect: Allow
            Action:
              - dynamodb:Query
            Resource: !Sub ${OrchSessionTable.Arn}/index/*
          - Sid: AllowOrchSessionTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt OrchSessionTableEncryptionKey.Arn
  # This combined read, write and delete policy is required because we've reached the managed polices per role quota limit (20). Ticket raised to requst quota increase (ATO-1056)
  OrchSessionTableReadWriteAndDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt OrchSessionTableEncryptionKey.Arn

  OrchSessionTableDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchSessionTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt OrchSessionTable.Arn
          - Sid: AllowOrchSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt OrchSessionTableEncryptionKey.Arn

  AuthUserInfoTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAuthUserInfoTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt AuthUserInfoTable.Arn
          - Sid: AllowAuthUserInfoTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt AuthUserInfoTableEncryptionKey.Arn

  AuthUserInfoTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAuthUserInfoTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt AuthUserInfoTable.Arn
          - Sid: AllowAuthUserInfoTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt AuthUserInfoTable.Arn
          - Sid: AllowAuthUserInfoTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt AuthUserInfoTableEncryptionKey.Arn

  ClientSessionTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt ClientSessionTableEncryptionKey.Arn

  ClientSessionTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientSessionTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt ClientSessionTableEncryptionKey.Arn

  ClientSessionTableDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientSessionTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt ClientSessionTableEncryptionKey.Arn

  ClientSessionTableReadAndDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt ClientSessionTableEncryptionKey.Arn

  # This combined read, write and delete policy is required because we've reached the managed polices per role quota limit.
  ClientSessionTableReadWriteAndDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientSessionTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt ClientSessionTable.Arn
          - Sid: AllowClientSessionTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt ClientSessionTableEncryptionKey.Arn

  OrchIdentityCredentialsTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchIdentityCredentialsTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchIdentityCredentialsTable.Arn
          - Sid: AllowOrchIdentityCredentialsTableDecryption
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt OrchIdentityCredentialsTableEncryptionKey.Arn

  OrchIdentityCredentialsTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchIdentityCredentialsTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt OrchIdentityCredentialsTable.Arn
          - Sid: AllowOrchIdentityCredentialsTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt OrchIdentityCredentialsTableEncryptionKey.Arn

  OrchIdentityCredentialsTableDeleteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchIdentityCredentialsTableDeleteAccess
            Effect: Allow
            Action:
              - dynamodb:DeleteItem
            Resource: !GetAtt OrchIdentityCredentialsTable.Arn

  # This combined read and write policy is required because we've reached the managed polices per role quota limit (20).
  OrchIdentityCredentialsTableReadAndWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchIdentityCredentialsTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchIdentityCredentialsTable.Arn
          - Sid: AllowOrchIdentityCredentialsTableDecryption
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt OrchIdentityCredentialsTableEncryptionKey.Arn
          - Sid: AllowOrchIdentityCredentialsTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt OrchIdentityCredentialsTable.Arn
          - Sid: AllowOrchIdentityCredentialsTableEncryption
            Effect: Allow
            Action:
              - kms:Encrypt
            Resource: !GetAtt OrchIdentityCredentialsTableEncryptionKey.Arn

  ClientRegistryTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientRegistryTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:DescribeTable
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:Scan
            Resource:
              - !Sub
                - arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-client-registry
                - AccountId:
                    !FindInMap [
                      EnvironmentConfiguration,
                      !Ref Environment,
                      authAccountId,
                    ]
                  AuthEnvironment:
                    !FindInMap [
                      EnvironmentConfiguration,
                      !Ref Environment,
                      authEnvironment,
                    ]
              - !GetAtt ClientRegistryTable.Arn
          - Sid: AllowClientRegistryTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  clientRegistryTableKeyArn,
                ]
              - !GetAtt ClientRegistryTableEncryptionKey.Arn

  ClientRegistryTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientRegistryTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:BatchWriteItem
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource:
              - !Sub
                - arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-client-registry
                - AccountId:
                    !FindInMap [
                      EnvironmentConfiguration,
                      !Ref Environment,
                      authAccountId,
                    ]
                  AuthEnvironment:
                    !FindInMap [
                      EnvironmentConfiguration,
                      !Ref Environment,
                      authEnvironment,
                    ]
              - !GetAtt ClientRegistryTable.Arn
          - Sid: AllowClientRegistryTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  clientRegistryTableKeyArn,
                ]
              - !GetAtt ClientRegistryTableEncryptionKey.Arn

  OrchDocAppCredentialTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchDocAppCredentialTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:DescribeTable
              - dynamodb:DescribeStream
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:Scan
            Resource: !GetAtt DocAppCredentialTable.Arn
          - Sid: AllowOrchDocAppCredentialTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt DocAppCredentialTableEncryptionKey.Arn

  OrchDocAppCredentialTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchDocAppCredentialTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource: !GetAtt DocAppCredentialTable.Arn
          - Sid: AllowOrchDocAppCredentialTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt DocAppCredentialTableEncryptionKey.Arn

  RpPublicKeyCacheTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowRpPublicKeyCacheTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt RpPublicKeyCacheTable.Arn
          - Sid: AllowRpPublicKeyCacheTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
            Resource: !GetAtt RpPublicKeyCacheTable.Arn
          - Sid: AllowRpPublicKeyCacheTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt RpPublicKeyTableEncryptionKey.Arn

  TxmaQueueSendPermissionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowTxMAEventKms
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                txmaEventEncryptionKeyArn,
              ]
          - Sid: AllowSQSTxMA
            Effect: Allow
            Action:
              - sqs:SendMessage
            Resource:
              - !Sub arn:aws:sqs:eu-west-2:${AWS::AccountId}:orchestration-${Environment}-txma-AuditEventQueue

  RedisParametersAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowGetParameters
            Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource:
              - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-session-redis-master-host
              - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-session-redis-tls
              - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-session-redis-port
              - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-session-redis-password
          - Sid: AllowDecryptOfParameters
            Effect: Allow
            Action: kms:Decrypt
            Resource: !GetAtt MainKmsKey.Arn

  AuthPublicEncryptionKeyAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowGetParameters
            Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource:
              - !If
                - UseAuthStub
                - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/orch-stubs/dev-auth-stub-auth-public-encryption-key
                - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-auth-public-encryption-key
          - Sid: AllowDecryptOfParameters
            Effect: Allow
            Action: kms:Decrypt
            Resource: !GetAtt MainKmsKey.Arn

  IpvCapacityAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowGetParameters
            Effect: Allow
            Action:
              - ssm:GetParameter
              - ssm:GetParameters
            Resource:
              - !Sub arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-ipv-capacity
          - Sid: AllowDecryptOfParameters
            Effect: Allow
            Action: kms:Decrypt
            Resource: !GetAtt MainKmsKey.Arn

  IdTokenKmsAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIdTokenSigningKms
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  idTokenKeyArn,
                ]

  IdTokenKmsRsaAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIdTokenSigningKmsRsa
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  idTokenKeyRsaArn,
                ]

  DocAppSigningKmsAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowDocAppSigningKey
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                docAppSigningKeyArn,
              ]

  StorageTokenSigningKmsAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowStorageTokenSigningKms
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  storageTokenKeyArn,
                ]

  IpvTokenSigningKmsAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIpvTokenSigningKms
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              - !GetAtt OrchIPVTokenSigningKmsKey.Arn

  OrchToAuthSigningKmsAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchToAuthSigningKms
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  orchToAuthKeyArn,
                ]

  BackChannelLogoutQueueWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowBackChannelLogoutQueueWrite
            Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueAttributes
            Resource: !GetAtt BackChannelLogoutQueue.Arn
          - Sid: AllowEncryptBackChannelLogoutQueue
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey
            Resource: !GetAtt BackChannelLogoutQueueEncryptionKey.Arn

  BackChannelLogoutQueueConsumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowConsumeFromBackChannelLogout
            Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt BackChannelLogoutQueue.Arn
          - Sid: AllowDecryptBackChannelLogoutQueue
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt BackChannelLogoutQueueEncryptionKey.Arn

  GlobalLogoutTxmaQueueConsumePolicy:
    Condition: UseGlobalLogoutTxmaQueue
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowConsumeFromGlobalLogoutTxmaQueue
            Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                globalLogoutQueueArn,
              ]
          - Sid: AllowDecryptGlobalLogoutTxmaQueue
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource:
              !FindInMap [
                EnvironmentConfiguration,
                !Ref Environment,
                globalLogoutQueueKmsKeyArn,
              ]

  GlobalLogoutTestQueueConsumePolicy:
    Condition: IsDevOrBuild
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowConsumeFromGlobalLogoutTestQueue
            Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
            Resource: !GetAtt GlobalLogoutTestQueue.Arn
          - Sid: AllowDecryptGlobalLogoutTestQueue
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt GlobalLogoutTestQueueEncryptionKey.Arn

  SpotResponseQueueConsumePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowSpotResponseQueueReadAccess
            Effect: Allow
            Action:
              - sqs:ReceiveMessage
              - sqs:DeleteMessage
              - sqs:GetQueueAttributes
              - sqs:ChangeMessageVisibility
            Resource: !Sub
              - "{{resolve:secretsmanager:${SecretArn}:SecretString}}"
              - SecretArn: !Ref SpotResponseQueueArnSecret
          - Sid: AllowSpotResponseQueueKms
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !Sub
              - "{{resolve:secretsmanager:${SecretArn}:SecretString}}"
              - SecretArn: !Ref SpotResponseQueueKeyArnSecret

  SpotRequestQueueWritePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowWriteAccessToSpotQueue
            Effect: Allow
            Action:
              - sqs:SendMessage
              - sqs:ChangeMessageVisibility
              - sqs:GetQueueAttributes
            Resource: !If
              - IpvExists
              - !Sub
                - arn:aws:sqs:eu-west-2:${AccountId}:${AuthEnvironment}-spot-request-queue
                - AccountId:
                    !FindInMap [
                      EnvironmentConfiguration,
                      !Ref Environment,
                      authAccountId,
                    ]
                  AuthEnvironment:
                    !FindInMap [
                      EnvironmentConfiguration,
                      !Ref Environment,
                      authEnvironment,
                    ]
              - !GetAtt StubSpotRequestQueue.Arn
          - Sid: AllowEncryptionAccessToSpotQueueKey
            Effect: Allow
            Action:
              - kms:GenerateDataKey
              - kms:Decrypt
            Resource: !If
              - IpvExists
              - !FindInMap [
                  EnvironmentConfiguration,
                  !Ref Environment,
                  spotRequestQueueKmsArn,
                ]
              - !GetAtt StubSpotRequestQueueKey.Arn

  AccountInterventionsServiceUriSecretAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: !Ref AccountInterventionsServiceUriSecret
          - Effect: Allow
            Action: kms:Decrypt
            Resource: !GetAtt MainKmsKey.Arn

  InvokeFetchJwksHandlerPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: lambda:InvokeFunction
            Resource: !Sub arn:aws:lambda:eu-west-2:${AWS::AccountId}:function:${Environment}-FetchJwksFunction:latest

  JwksCacheTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowJwksCacheTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt JwksCacheTable.Arn
          - Sid: AllowJwksCacheTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
            Resource: !GetAtt JwksCacheTable.Arn
          - Sid: AllowJwksCacheTableIndexQueryAccess
            Effect: Allow
            Action:
              - dynamodb:Query
            Resource: !GetAtt JwksCacheTable.Arn
          - Sid: AllowJwksCacheTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt JwksCacheTableEncryptionKey.Arn
  #endregion

  #region orch nonprod slack notifications

  SlackEvents:
    Condition: IsNotProduction
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "Slack Alerts for ${Environment}"
      TopicName: !Sub ${Environment}-slack-events
      KmsMasterKeyId: !GetAtt SlackEventsKey.Arn

  SlackEventsKeyAlias:
    Condition: IsNotProduction
    Type: AWS::KMS::Alias
    Properties:
      AliasName: alias/slackEventsKey
      TargetKeyId: !Ref SlackEventsKey

  SlackEventsKey:
    Condition: IsNotProduction
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt Slack events topic
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId

  SlackEventsPolicy:
    Condition: IsNotProduction
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SlackEvents
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: !Ref SlackEvents
            Principal:
              Service:
                - cloudwatch.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId

  SlackNotificationsFunction:
    Condition: IsNotProduction
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: SlackNotificationsFunction doesn't need vpc configuration
    IgnoreGlobals: "*"
    Properties:
      AutoPublishAlias: latest
      FunctionName: !Sub ${Environment}-SlackNotificationsFunction
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      CodeSigningConfigArn: !If
        - UseCodeSigning
        - !Ref CodeSigningConfigArn
        - !Ref AWS::NoValue
      CodeUri: ./orchestration-alerting
      Handler: slackNotifications.handler
      ReservedConcurrentExecutions: 1
      Runtime: "nodejs20.x"
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          DEPLOY_ENVIRONMENT: !Ref Environment
      Policies:
        - Statement:
            - Sid: AllowGetParameters
              Effect: "Allow"
              Action:
                - "ssm:GetParameter"
                - "ssm:GetParameters"
              Resource:
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-slack-channel-id"
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-slack-hook-url"
      Events:
        SNS:
          Type: SNS
          Properties:
            Topic: !Ref SlackEvents

  SlackNotificationsPermission:
    Condition: IsNotProduction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SlackNotificationsFunction
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Ref SlackEvents
  #endregion

  #region orch prod slack notifications
  OrchProdSlackEvents:
    Condition: IsProduction
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "Slack Alerts for production"
      TopicName: orch-prod-slack-events
      KmsMasterKeyId: !GetAtt OrchProdSlackEventsKey.Arn

  OrchProdSlackEventsKey:
    Condition: IsProduction
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt prod Slack events topic
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId

  OrchProdSlackEventsPolicy:
    Condition: IsProduction
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref OrchProdSlackEvents
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: !Ref OrchProdSlackEvents
            Principal:
              Service:
                - cloudwatch.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId

  OrchProdSlackNotificationsFunction:
    Condition: IsProduction
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: OrchProdSlackNotificationsFunction doesn't need vpc configuration
    IgnoreGlobals: "*"
    Properties:
      AutoPublishAlias: latest
      FunctionName: !Sub ${Environment}-OrchProdSlackNotificationsFunction
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      CodeSigningConfigArn: !If
        - UseCodeSigning
        - !Ref CodeSigningConfigArn
        - !Ref AWS::NoValue
      CodeUri: ./orchestration-alerting
      Handler: slackNotifications.handler
      ReservedConcurrentExecutions: 1
      Runtime: "nodejs20.x"
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          DEPLOY_ENVIRONMENT: !Ref Environment
      Policies:
        - Statement:
            - Sid: AllowGetParameters
              Effect: "Allow"
              Action:
                - "ssm:GetParameter"
                - "ssm:GetParameters"
              Resource:
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-slack-channel-id"
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-slack-hook-url"
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/pagerduty-slack-channel-id"
      Events:
        SNS:
          Type: SNS
          Properties:
            Topic: !Ref OrchProdSlackEvents

  OrchProdSlackNotificationsPermission:
    Condition: IsProduction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref OrchProdSlackNotificationsFunction
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Ref OrchProdSlackEvents
  #endregion
  #region 2nd line slack notifications

  SecondLineSlackEvents:
    Condition: IsProduction
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "Slack Alerts for 2nd line support channel"
      TopicName: support-channel-slack-events
      KmsMasterKeyId: !GetAtt SecondLineSlackEventsKey.Arn

  SecondLineSlackEventsKey:
    Condition: IsProduction
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt support channel Slack events topic
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId

  SecondLineSlackNotificationsFunction:
    Condition: IsProduction
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: SecondLineSlackNotificationsFunction doesn't need vpc configuration
    IgnoreGlobals: "*"
    Properties:
      AutoPublishAlias: latest
      FunctionName: !Sub ${Environment}-SecondLineSlackNotificationsFunction
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue
      CodeSigningConfigArn: !If
        - UseCodeSigning
        - !Ref CodeSigningConfigArn
        - !Ref AWS::NoValue
      CodeUri: ./orchestration-alerting
      Handler: slackNotifications.handler
      ReservedConcurrentExecutions: 1
      Runtime: "nodejs20.x"
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          DEPLOY_ENVIRONMENT: !Ref Environment
          SLACK_CHANNEL_PARAM: "pagerduty-slack-channel-id"
      Policies:
        - Statement:
            - Sid: AllowGetParameters
              Effect: "Allow"
              Action:
                - "ssm:GetParameter"
                - "ssm:GetParameters"
              Resource:
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/pagerduty-slack-channel-id"
                - !Sub "arn:aws:ssm:eu-west-2:${AWS::AccountId}:parameter/${Environment}-slack-hook-url"
      Events:
        SNS:
          Type: SNS
          Properties:
            Topic: !Ref SecondLineSlackEvents

  SecondLineSlackNotificationsPermission:
    Condition: IsProduction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref SecondLineSlackNotificationsFunction
      Action: lambda:InvokeFunction
      Principal: sns.amazonaws.com
      SourceAccount: !Ref AWS::AccountId
      SourceArn: !Ref SecondLineSlackEvents

  SecondLineSlackEventsPolicy:
    Condition: IsProduction
    Type: AWS::SNS::TopicPolicy
    Properties:
      Topics:
        - !Ref SecondLineSlackEvents
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Action: sns:Publish
            Effect: Allow
            Resource: !Ref SecondLineSlackEvents
            Principal:
              Service:
                - cloudwatch.amazonaws.com
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId
  #endregion
  #region PagerDuty events

  PagerDutyEvents:
    Condition: IsProduction
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: !Sub "PagerDuty events for ${Environment}"
      TopicName: !Sub ${Environment}-pagerduty-alerts
      KmsMasterKeyId: !GetAtt PagerDutyEventsKey.Arn

  PagerDutyEventsKey:
    Condition: IsProduction
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt PagerDuty events topic
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
          - Effect: Allow
            Principal:
              Service: cloudwatch.amazonaws.com
            Action:
              - kms:Decrypt
              - kms:GenerateDataKey*
            Resource: "*"
            Condition:
              StringEquals:
                AWS:SourceAccount: !Ref AWS::AccountId

  PagerDutySNSSubscription:
    Condition: IsProduction
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Sub
        - "{{resolve:secretsmanager:${SecretArn}:SecretString:integrationURL}}"
        - SecretArn: !Ref PagerDutyUrlSecret
      Protocol: https
      RawMessageDelivery: false
      TopicArn: !Ref PagerDutyEvents
  #endregion
  #region OrchAuthCode DynamoDB Table

  OrchAuthCodeTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for OrchAuthCode DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  OrchAuthCodeTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Orch-Auth-Code
      AttributeDefinitions:
        - AttributeName: AuthCode
          AttributeType: S
      KeySchema:
        - AttributeName: AuthCode
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt OrchAuthCodeTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: OrchAuthCodeTable

  OrchAuthCodeTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchAuthCodeTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt OrchAuthCodeTable.Arn
          - Sid: AllowOrchAuthCodeTableDecryption
            Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt OrchAuthCodeTableEncryptionKey.Arn

  OrchAuthCodeTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowOrchAuthCodeTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt OrchAuthCodeTable.Arn
          - Sid: AllowOrchAuthCodeTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt OrchAuthCodeTableEncryptionKey.Arn

  #endregion

  #region Client Rate Limit

  ClientRateLimitTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Client Rate Limit DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  ClientRateLimitTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Client-Rate-Limit
      AttributeDefinitions:
        - AttributeName: ClientId
          AttributeType: S
        - AttributeName: PeriodStartTime
          AttributeType: S
      KeySchema:
        - AttributeName: ClientId
          KeyType: HASH
        - AttributeName: PeriodStartTime
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt ClientRateLimitTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: ClientRateLimitTable

  ClientRateLimitMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-client-rate-limit-filter
      FilterPattern: '{($.message = "Client with ID * has exceeded rate limit. Current count: *. Limit *")}'
      LogGroupName: !Ref AuthorisationFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-client-rate-limit-count
          MetricNamespace: ClientRateLimitCount
          MetricValue: 1

  ClientRateLimitAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-client-rate-limit-alarm
      AlarmDescription: !Sub "1 or more clients have hit their rate limit for ${Environment}.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/h4DKTQE"
      Namespace: ClientRateLimitCount
      MetricName: !Sub ${Environment}-client-rate-limit-count
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      AlarmActions:
        - !If
          - IsNotProduction
          - !Ref SlackEvents
          - !Ref SecondLineSlackEvents
  #endregion

  #region ClientRateLimitTable policies
  ClientRateLimitTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowClientRateLimitTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt ClientRateLimitTable.Arn
          - Sid: AllowClientRateLimitTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt ClientRateLimitTable.Arn
          - Sid: AllowClientRateLimitTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt ClientRateLimitTableEncryptionKey.Arn
  #endregion

  #region StateStorage policies
  StateStorageTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowStateStorageTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt StateStorageTable.Arn
          - Sid: AllowStateStorageTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt StateStorageTableEncryptionKey.Arn

  StateStorageTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowStateStorageTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt StateStorageTable.Arn
          - Sid: AllowStateStorageTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt StateStorageTableEncryptionKey.Arn
  StateStorageTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowStateStorageTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt StateStorageTable.Arn
          - Sid: AllowStateStorageTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt StateStorageTable.Arn
          - Sid: AllowStateStorageTableDecryptionAndEncryption
            Effect: Allow
            Action:
              - kms:Decrypt
              - kms:Encrypt
            Resource: !GetAtt StateStorageTableEncryptionKey.Arn
  #endregion

  #region cross browser data table
  CrossBrowserTableEncryptionKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS encryption key for Cross Browser DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*

  CrossBrowserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-Cross-Browser
      AttributeDefinitions:
        - AttributeName: State
          AttributeType: S
      KeySchema:
        - AttributeName: State
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt CrossBrowserTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: CrossBrowserDataTable

  CrossBrowserTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCrossBrowserTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt CrossBrowserTable.Arn
          - Sid: AllowCrossBrowserTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt CrossBrowserTableEncryptionKey.Arn
  CrossBrowserTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCrossBrowserTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt CrossBrowserTable.Arn
          - Sid: AllowCrossBrowserTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt CrossBrowserTableEncryptionKey.Arn
  CrossBrowserTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowCrossBrowserTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource: !GetAtt CrossBrowserTable.Arn
          - Sid: AllowCrossBrowserTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:PutItem
              - dynamodb:UpdateItem
            Resource: !GetAtt CrossBrowserTable.Arn
          - Sid: AllowCrossBrowserTableKeyAccess
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !GetAtt CrossBrowserTableEncryptionKey.Arn
  #endregion

  #region access token data table
  AccessTokenTableEncryptionKey:
    Type: AWS::KMS::Key
    DeletionPolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    UpdateReplacePolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    Properties:
      Description: KMS encryption key for Access Token DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
  AccessTokenTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    UpdateReplacePolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    Properties:
      TableName: !Sub ${Environment}-Access-Token
      AttributeDefinitions:
        - AttributeName: ClientAndRpPairwiseId
          AttributeType: S
        - AttributeName: AuthCode
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: AuthCodeIndex
          KeySchema:
            - AttributeName: AuthCode
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: ClientAndRpPairwiseId
          KeyType: HASH
        - AttributeName: AuthCode
          KeyType: RANGE
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt AccessTokenTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: AccessTokenTable
  AccessTokenTableReadAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAccessTokenTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource:
              - !GetAtt AccessTokenTable.Arn
          - Sid: AllowAccessTokenTableIndexQueryAccess
            Effect: Allow
            Action:
              - dynamodb:Query
            Resource:
              - !Sub ${AccessTokenTable.Arn}/index/*
          - Sid: AllowAccessTokenTableDecryption
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !GetAtt AccessTokenTableEncryptionKey.Arn
  AccessTokenTableWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowAccessTokenTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource:
              - !GetAtt AccessTokenTable.Arn
          - Sid: AllowAccessTokenTableDecryption
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !GetAtt AccessTokenTableEncryptionKey.Arn
  #endregion

  #region refresh token data table
  RefreshTokenTableEncryptionKey:
    Type: AWS::KMS::Key
    DeletionPolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    UpdateReplacePolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    Properties:
      Description: KMS encryption key for Refresh Token DynamoDB table
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Sid: AllowDynamodbAccessToEncryptionKey
            Effect: Allow
            Principal:
              Service: dynamodb.amazonaws.com
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:dynamodb:table/arn: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/*
  RefreshTokenTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    UpdateReplacePolicy: !If [IsNotDevEnvironment, Retain, !Ref AWS::NoValue]
    Properties:
      TableName: !Sub ${Environment}-Refresh-Token
      AttributeDefinitions:
        - AttributeName: JwtId
          AttributeType: S
        - AttributeName: AuthCode
          AttributeType: S
      GlobalSecondaryIndexes:
        - IndexName: AuthCodeIndex
          KeySchema:
            - AttributeName: AuthCode
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      KeySchema:
        - AttributeName: JwtId
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      DeletionProtectionEnabled: true
      SSESpecification:
        SSEEnabled: true
        KMSMasterKeyId: !GetAtt RefreshTokenTableEncryptionKey.Arn
        SSEType: KMS
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Name
          Value: RefreshTokenTable
  RefreshTokenTableReadWriteAccessPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowRefreshTokenTableReadAccess
            Effect: Allow
            Action:
              - dynamodb:DescribeTable
              - dynamodb:Get*
            Resource:
              - !GetAtt RefreshTokenTable.Arn
          - Sid: AllowRefreshTokenTableIndexQueryAccess
            Effect: Allow
            Action:
              - dynamodb:Query
            Resource:
              - !Sub ${RefreshTokenTable.Arn}/index/*
          - Sid: AllowRefreshTokenTableWriteAccess
            Effect: Allow
            Action:
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource:
              - !GetAtt RefreshTokenTable.Arn
          - Sid: AllowRefreshTokenTableDecryption
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:GenerateDataKey*
              - kms:DescribeKey
            Resource: !GetAtt RefreshTokenTableEncryptionKey.Arn
  #endregion

  #region IPV token signing key pair

  OrchIPVTokenSigningKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${Environment}-orch-ipv-token-auth-kms-key-alias"
      TargetKeyId: !Ref OrchIPVTokenSigningKmsKey

  OrchIPVTokenSigningKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: KMS signing key for authentication to the IPV token endpoint
      PendingWindowInDays: 30
      KeyUsage: SIGN_VERIFY
      KeySpec: ECC_NIST_P256
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Sid: AllowIamManagement
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"

  #endregion

  #region Canary Alarms
  #region FetchJwks Anomaly Alarms
  FetchJwksErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-FetchJwksFunction

  FetchJwksErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-FetchJwks-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} FetchJwks lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-FetchJwksFunction
            Period: 60
            Stat: Average

  #endregion

  #region OpenIdConfiguration Anomaly Alarms

  OpenIdConfigurationErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-OpenIdConfigurationFunction

  OpenIdConfigurationErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-OpenIdConfiguration-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} OpenIdConfiguration lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-OpenIdConfigurationFunction
            Period: 60
            Stat: Average

  #endregion

  #region Trustmark Anomaly Alarms

  TrustmarkFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-TrustmarkFunction

  TrustmarkFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-trustmark-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} trustmark lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-TrustmarkFunction
            Period: 60
            Stat: Average

  #endregion

  #region Doc App Callback Anomaly Alarms
  DocAppCallbackErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-DocAppCallbackFunction

  DocAppCallbackErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-DocAppCallback-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} DocAppCallback lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-DocAppCallbackFunction
            Period: 60
            Stat: Average
  #endregion

  #region Token Function Anomaly Alarms
  TokenFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-TokenFunction

  TokenFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-TokenFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} TokenFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-TokenFunction
            Period: 60
            Stat: Average
  #endregion

  #region Logout Function Anomaly Alarms
  LogoutFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-LogoutFunction

  LogoutFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-LogoutFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} LogoutFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-LogoutFunction
            Period: 60
            Stat: Average
  #endregion

  #region Authentication Callback Anomaly Alarms
  AuthenticationCallbackFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-AuthenticationCallbackFunction

  AuthenticationCallbackFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-AuthenticationCallbackFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} AuthenticationCallbackFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthenticationCallbackFunction
            Period: 60
            Stat: Average

  #endregion

  #region Jwks Function Anomaly Alarms
  JwksFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-JwksFunction

  JwksFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-JwksFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} JwksFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-JwksFunction
            Period: 60
            Stat: Average

  #endregion

  #region Authorisation Function Anomaly Alarms
  AuthorisationFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-AuthorisationFunction

  AuthorisationFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-AuthorisationFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} AuthorisationFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthorisationFunction
            Period: 60
            Stat: Average

  #endregion

  #region UserInfo Function Anomaly Alarms
  UserInfoFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-UserInfoFunction

  UserInfoFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-UserInfoFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} UserInfoFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-UserInfoFunction
            Period: 60
            Stat: Average

  #endregion

  #region AuthCode Function Anomaly Alarms
  AuthCodeFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-AuthCodeFunction

  AuthCodeFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-AuthCodeFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} AuthCodeFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-AuthCodeFunction
            Period: 60
            Stat: Average

  #endregion

  #region UpdateClientConfig Function Anomaly Alarms
  UpdateClientConfigFunctionAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Condition: IsNotProduction
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-UpdateClientConfigFunction

  UpdateClientConfigFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotProduction
    Properties:
      AlarmName: !Sub ${Environment}-UpdateClientConfigFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} UpdateClientConfigFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-UpdateClientConfigFunction
            Period: 60
            Stat: Average

  #endregion

  #region ClientRegistration Function Anomaly Alarms
  ClientRegistrationFunctionAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Condition: IsNotProduction
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-ClientRegistrationFunction

  ClientRegistrationFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: IsNotProduction
    Properties:
      AlarmName: !Sub ${Environment}-ClientRegistrationFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} ClientRegistrationFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-ClientRegistrationFunction
            Period: 60
            Stat: Average

  #endregion

  #region IpvCallback Function Anomaly Alarms
  IpvCallbackFunctionAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-IpvCallbackFunction

  IpvCallbackFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-IpvCallbackFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} IpvCallbackFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-IpvCallbackFunction
            Period: 60
            Stat: Average

  #endregion

  #region SpotResponseFunction Function Anomaly Alarms
  SpotResponseFunctionAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Condition: IpvExists
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-SpotResponseFunction

  SpotResponseFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-SpotResponseFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} SpotResponseFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-SpotResponseFunction
            Period: 60
            Stat: Average

  #endregion

  #region StorageTokenJwk Function Anomaly Alarms
  StorageTokenJwkFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-StorageTokenJwkFunction

  StorageTokenJwkFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-StorageTokenJwkFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} StorageTokenJwkFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-StorageTokenJwkFunction
            Period: 60
            Stat: Average
  #endregion

  #region IpvJwks Function Anomaly Alarms
  IpvJwksFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-IpvJwksFunction

  IpvJwksFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-IpvJwksFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} IpvJwksFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-IpvJwksFunction
            Period: 60
            Stat: Average
  #endregion

  #region GlobalLogout Function Anomaly Alarms
  GlobalLogoutFunctionErrorAnomalyDetector:
    Type: AWS::CloudWatch::AnomalyDetector
    Properties:
      MetricName: Errors
      Namespace: AWS/Lambda
      Stat: Average
      Dimensions:
        - Name: FunctionName
          Value: !Sub ${Environment}-GlobalLogoutFunction

  GlobalLogoutFunctionErrorAnomalyAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-GlobalLogoutFunction-error-anomaly-alarm
      AlarmDescription: !Sub "Anomalous Error rate in ${Environment} GlobalLogoutFunction lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: false
      ComparisonOperator: GreaterThanUpperThreshold
      EvaluationPeriods: 3
      ThresholdMetricId: ad1
      TreatMissingData: notBreaching
      Metrics:
        - Id: ad1
          ReturnData: True
          Expression: ANOMALY_DETECTION_BAND(m1, 2)
        - Id: m1
          ReturnData: True
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Sub ${Environment}-GlobalLogoutFunction
            Period: 60
            Stat: Average
  #endregion

  # region PagerDuty alarms
  IpvHandbackPagerDutyAlarm:
    Condition: IsProduction
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref PagerDutyEvents
        - !Ref OrchProdSlackEvents
        - !Ref SecondLineSlackEvents
      OKActions:
        - !Ref PagerDutyEvents
        - !Ref OrchProdSlackEvents
        - !Ref SecondLineSlackEvents
      AlarmDescription: !Sub "50 or more errors have occurred in the ${Environment} IPV handback lambdas.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/spaces/Orch/pages/5761204264/Runbook+IPV+handback+alarm"
      AlarmName: !Sub ${Environment}-pagerduty-ipv-handback-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 50
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: (m1 + m2 + m3)
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              MetricName: !Sub ${Environment}-ipv-callback-count
              Namespace: LambdaErrorsNamespace
            Period: 600
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              MetricName: !Sub ${Environment}-spot-response-count
              Namespace: LambdaErrorsNamespace
            Period: 600
            Stat: Sum
            Unit: Count
        - Id: m3
          ReturnData: false
          MetricStat:
            Metric:
              MetricName: !Sub ${Environment}-auth-code-count
              Namespace: LambdaErrorsNamespace
            Period: 600
            Stat: Sum
            Unit: Count

  DocAppHandbackPagerDutyAlarm:
    Condition: IsProduction
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref PagerDutyEvents
        - !Ref OrchProdSlackEvents
        - !Ref SecondLineSlackEvents
      OKActions:
        - !Ref PagerDutyEvents
        - !Ref OrchProdSlackEvents
        - !Ref SecondLineSlackEvents
      AlarmDescription: !Sub "50 or more errors have occurred in the ${Environment} Doc app callback handback lambdas.ACCOUNT: di-orchestration-${Environment}. Runbook: https://govukverify.atlassian.net/wiki/x/JoD2FwE"
      AlarmName: !Sub ${Environment}-pagerduty-doc-app-handback-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 50
      EvaluationPeriods: 1
      TreatMissingData: notBreaching
      Metrics:
        - Id: e1
          ReturnData: true
          MetricStat:
            Metric:
              MetricName: !Sub ${Environment}-doc-app-callback-count
              Namespace: LambdaErrorsNamespace
            Period: 600
            Stat: Sum
            Unit: Count
  #endregion

Outputs:
  SlackEventsArn:
    Description: "ARN of the SlackEvents SNS topic"
    Value: !If
      - IsNotProduction
      - !Ref SlackEvents
      - !Ref OrchProdSlackEvents
    Export:
      Name: !Sub "${AWS::StackName}-SlackEventsArn"
