AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Environment:
    Type: String
    Description: The name of the environment to deploy to
  VpcStackName:
    Type: String
    Description: The name of the stack used to create the VPC
  CodeSigningConfigArn:
    Type: String
    Description: The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: none
  PermissionsBoundary:
    Type: String
    Description: The ARN of the permissions boundary to apply when creating IAM roles
    Default: none

Conditions:
  UsePermissionsBoundary:
    !Not [ !Equals [ none, !Ref PermissionsBoundary ] ]
  UseCodeSigning:
    !Not [ !Equals [ none, !Ref CodeSigningConfigArn ] ]

Mappings:
  EnvironmentConfiguration:
    dev:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      authApiId: "aqyf5d32s2"
      authAccountId: "761723964695"
      authEnvironment: sandpit
      serviceDomain: sandpit.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/87bbefac-6fac-4450-8ed6-9ad75c36fdf1
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:761723964695:sandpit-back-channel-logout-queue
      docAppBackendUri: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppCriDataV2Endpoint: credentials/issue
      docAppAud: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/d2806c70-0832-46f3-9612-75cc9e745186
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:761723964695:key/885ed2d5-21a9-4e26-bb87-24ecbb4b1875
    build:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      authApiId: "6of9f4amvg"
      authAccountId: "761723964695"
      authEnvironment: build
      serviceDomain: build.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/ca2e4723-7ae8-478d-8fa2-baad3f71f506
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:761723964695:build-back-channel-logout-queue
      docAppBackendUri: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppCriDataV2Endpoint: credentials/issue
      docAppAud: https://dcmaw-cri.build.stubs.account.gov.uk
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/f2603fe5-7d09-4279-a42d-e2363e11efb5
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:761723964695:key/0096ee31-26aa-4c92-bea4-9dd9fa73dcf6
    staging:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      authApiId: "1rvwudxmbk"
      authAccountId: "758531536632"
      authEnvironment: staging
      serviceDomain: staging.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:758531536632:key/11af3935-0304-4813-bc16-302ab942c75a
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:758531536632:staging-back-channel-logout-queue
      docAppBackendUri: https://api-backend-api.review-b.staging.account.gov.uk
      docAppCriDataV2Endpoint: userinfo/v2
      docAppAud: https://www.review-b.staging.account.gov.uk
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:758531536632:key/63ce28d6-5482-4886-933d-33cd27f469d3
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:758531536632:key/00051d8b-de72-4952-baab-3be6460ad844
    integration:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceNonProductionVariables
      authApiId: "k2skqhxed6"
      authAccountId: "761723964695"
      authEnvironment: integration
      serviceDomain: integration.account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:761723964695:key/6eadd5bf-8a7f-4062-88c4-7774f070df02
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:761723964695:integration-back-channel-logout-queue
      docAppBackendUri: https://api-backend-api.review-b.integration.account.gov.uk
      docAppCriDataV2Endpoint: userinfo/v2
      docAppAud: https://www.review-b.integration.account.gov.uk
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:761723964695:key/37aea309-c4a2-4ac7-8361-c1789f54df77
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:761723964695:key/031ece8b-a59a-4991-a2aa-98f486c69f60
    production:
      dynatraceSecretArn: arn:aws:secretsmanager:eu-west-2:216552277552:secret:DynatraceProductionVariables
      authApiId: "s4gj268zy6"
      authAccountId: "172348255554"
      authEnvironment: production
      serviceDomain: account.gov.uk
      idTokenKeyArn: arn:aws:kms:eu-west-2:172348255554:key/01c412c6-98de-48b2-9a6d-51f57e8c3d7a
      backchannelLogoutQueueArn: arn:aws:sqs:eu-west-2:172348255554:production-back-channel-logout-queue
      docAppBackendUri: https://api-backend-api.review-b.account.gov.uk
      docAppCriDataV2Endpoint: userinfo/v2
      docAppAud: https://www.review-b.account.gov.uk
      docAppCredentialTableKeyArn: arn:aws:kms:eu-west-2:172348255554:key/ab10facb-aa4d-47b9-92bb-3974b9585fd4
      docAppSigningKeyArn: arn:aws:kms:eu-west-2:172348255554:key/c6448889-ae6d-4db1-916c-9338a3c2bd1b

Globals:
  Function:
    Environment:
      Variables:
        AWS_LAMBDA_EXEC_WRAPPER: /opt/dynatrace
        DT_CONNECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CONNECTION_BASE_URL: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CONNECTION_BASE_URL}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_CLUSTER_ID: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_CLUSTER_ID}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_LOG_COLLECTION_AUTH_TOKEN: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_LOG_COLLECTION_AUTH_TOKEN}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_TENANT: !Sub
          - '{{resolve:secretsmanager:${SecretArn}:SecretString:DT_TENANT}}'
          - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
        DT_OPEN_TELEMETRY_ENABLE_INTEGRATION: "true"
    MemorySize: 1536
    Timeout: 30
    Runtime: java17
    Architectures:
      - x86_64
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    Layers:
      - !Sub
        - '{{resolve:secretsmanager:${SecretArn}:SecretString:JAVA_LAYER}}'
        - SecretArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, dynatraceSecretArn ]
    VpcConfig:
      SecurityGroupIds:
        - !Ref LambdaSecurityGroup
      SubnetIds:
        - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdA
        - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdB
        - Fn::ImportValue: !Sub ${VpcStackName}-PrivateSubnetIdC

Resources:
  MainKmskeyAlias:
    Type: 'AWS::KMS::Alias'
    Properties:
      AliasName: "alias/mainKmsKey"
      TargetKeyId: !Ref MainKmsKey
  MainKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Key used to encrypt Orchestration
      EnableKeyRotation: true
      KeyPolicy:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: "*"
          - Effect: Allow
            Principal:
              Service: !Sub logs.${AWS::Region}.amazonaws.com
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
            Resource: "*"
            Condition:
              ArnLike:
                kms:EncryptionContext:aws:logs:arn: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*

  OpenIdConfigurationFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work
    Properties:
      AutoPublishAlias: latest
      CodeUri: ./oidc-api
      Handler: uk.gov.di.authentication.oidc.lambda.WellknownHandler::handleRequest
      ReservedConcurrentExecutions: 1
      LoggingConfig:
        LogGroup: !Ref OpenIdConfigurationFunctionLogGroup
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OIDC_API_BASE_URL:  !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
          ENVIRONMENT: !Sub ${Environment}
          FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  OpenIdConfigurationFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref OpenIdConfigurationFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - 'arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/.well-known/openid-configuration'
        - AccountId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authAccountId ]
          ApiId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authApiId ]

  OpenIdConfigurationFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-openid-configuration-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 14

  OpenIdConfigurationFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-openid-configuration-errors
      FilterPattern: "{($.level = \"ERROR\")}"
      LogGroupName: !Ref OpenIdConfigurationFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-openid-configuration-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  OpenIdConfigurationFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} openid-configuration lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-openid-configuration-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: OpenIdConfigurationFunctionErrorMetricFilter.MetricTransformations[0].MetricName
      Namespace: OpenIdConfigurationFunctionErrorMetricFilter.MetricTransformations[0].MetricNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  OpenIdConfigurationFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-openid-configuration-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} openid-configuration lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: m2/m1*100
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref OpenIdConfigurationFunction.Alias
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref OpenIdConfigurationFunction.Alias
            Period: 60
            Stat: Sum
            Unit: Count

  TrustmarkFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: Lambdas will migrate to our own VPC in future work
    Properties:
      AutoPublishAlias: latest
      CodeUri: ./oidc-api
      Handler: uk.gov.di.authentication.oidc.lambda.TrustMarkHandler::handleRequest
      ReservedConcurrentExecutions: 1
      LoggingConfig:
        LogGroup: !Ref TrustmarkFunctionLogGroup
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          OIDC_API_BASE_URL:  !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
          ENVIRONMENT: !Sub ${Environment}
          FRONTEND_BASE_URL: !Sub
            - https://signin.${ServiceDomain}/
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  TrustmarkFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref TrustmarkFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - 'arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/trustmark'
        - AccountId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authAccountId ]
          ApiId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authApiId ]

  TrustmarkFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-trustmark-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 14

  TrustmarkFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-trustmark-errors
      FilterPattern: "{($.level = \"ERROR\")}"
      LogGroupName: !Ref TrustmarkFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-trustmark-error-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  TrustmarkFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} trustmark lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-trustmark-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: TrustmarkFunctionErrorMetricFilter.MetricTransformations[0].MetricName
      Namespace: TrustmarkFunctionErrorMetricFilter.MetricTransformations[0].MetricNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  TrustmarkFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-trustmark-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} trustmark lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: m2/m1*100
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref TrustmarkFunction.Alias
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref TrustmarkFunction.Alias
            Period: 60
            Stat: Sum
            Unit: Count

  BackChannelLogoutRequestFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: Lambda needs open egress so isn't in VPC
    IgnoreGlobals: [VpcConfig]
    Properties:
      AutoPublishAlias: latest
      CodeUri: ./oidc-api
      Handler: uk.gov.di.authentication.oidc.lambda.BackChannelLogoutRequestHandler::handleRequest
      ReservedConcurrentExecutions: 1
      LoggingConfig:
        LogGroup: !Ref BackChannelLogoutRequestFunctionLogGroup
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS: !FindInMap [ EnvironmentConfiguration, !Ref Environment, idTokenKeyArn ]
          OIDC_API_BASE_URL: !Sub
          - https://oidc.${ServiceDomain}/
          - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
      Policies:
        Statement:
          - Sid: AllowIdTokenSigningKms
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource:
              - !FindInMap [ EnvironmentConfiguration, !Ref Environment, idTokenKeyArn ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_117.CKV_AWS_173

  BackChannelLogoutRequestFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref BackChannelLogoutRequestFunction.Alias
      Action: lambda:InvokeFunction
      Principal: sqs.amazonaws.com
      SourceArn: !FindInMap [ EnvironmentConfiguration, !Ref Environment, backchannelLogoutQueueArn ]

  BackChannelLogoutRequestFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-backchannel-logout-request-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 14

  BackChannelLogoutRequestFunctionErrorMetricFilter:
    Type: AWS::Logs::MetricFilter
    Properties:
      FilterName: !Sub ${Environment}-backchannel-logout-request-errors
      FilterPattern: "{($.level = \"ERROR\")}"
      LogGroupName: !Ref BackChannelLogoutRequestFunctionLogGroup
      MetricTransformations:
        - MetricName: !Sub ${Environment}-backchannel-logout-request-count
          MetricNamespace: LambdaErrorsNamespace
          MetricValue: 1

  BackChannelLogoutRequestFunctionErrorCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      AlarmDescription: !Sub "10 or more errors have occurred in the ${Environment} backchannel logout request lambda.ACCOUNT: di-orchestration-${Environment}"
      AlarmName: !Sub ${Environment}-backchannel-logout-request-alarm
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      MetricName: BackChannelLogoutRequestFunctionErrorMetricFilter.MetricTransformations[0].MetricName
      Namespace: BackChannelLogoutRequestFunctionErrorMetricFilter.MetricTransformations[0].MetricNamespace
      Period: 3600
      Statistic: Sum
      Threshold: 10

  BackChannelLogoutRequestFunctionErrorRateCloudwatchAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub ${Environment}-backchannel-logout-request-error-rate-alarm
      AlarmDescription: !Sub "Lambda error rate of 10 has been reached in the ${Environment} backchannel logout request lambda.ACCOUNT: di-orchestration-${Environment}"
      ActionsEnabled: true
      AlarmActions:
        - !Ref SlackEvents
      ComparisonOperator: GreaterThanOrEqualToThreshold
      EvaluationPeriods: 1
      Threshold: 10
      Metrics:
        - Id: e1
          ReturnData: true
          Expression: m2/m1*100
          Label: Error Rate
        - Id: m1
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Invocations
              Dimensions:
                - Name: FunctionName
                  Value: !Ref BackChannelLogoutRequestFunction.Alias
            Period: 60
            Stat: Sum
            Unit: Count
        - Id: m2
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/Lambda
              MetricName: Errors
              Dimensions:
                - Name: FunctionName
                  Value: !Ref BackChannelLogoutRequestFunction.Alias
            Period: 60
            Stat: Sum
            Unit: Count

  DocAppCallbackFunction:
    Type: AWS::Serverless::Function
    # checkov:skip=CKV_AWS_116: DLQ is not appropriate for a Lambda invoked by an API
    # checkov:skip=CKV_AWS_117: VPC settings are global
    Properties:
      AutoPublishAlias: latest
      CodeUri: ./doc-checking-app-api
      Handler: uk.gov.di.authentication.app.lambda.DocAppCallbackHandler::handleRequest
      ReservedConcurrentExecutions: 1
      LoggingConfig:
        LogGroup: !Ref DocAppCallbackFunctionLogGroup
      Environment:
        Variables:
          # checkov:skip=CKV_AWS_173: These environment variables do not require encryption.
          CUSTOM_DOC_APP_CLAIM_ENABLED: true
          DOC_APP_AUTHORISATION_CALLBACK_URI: !Sub
            - https://oidc.${ServiceDomain}/doc-app-callback
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
          DOC_APP_AUTHORISATION_CLIENT_ID: authOrchestratorDocApp
          DOC_APP_TOKEN_SIGNING_KEY_ALIAS: !Sub
            - "alias/${AuthEnvironment}-doc-app-auth-kms-key-alias"
            - AuthEnvironment: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authEnvironment ]
          DOC_APP_BACKEND_URI: !FindInMap [ EnvironmentConfiguration, !Ref Environment, docAppBackendUri ]
          DOC_APP_CRI_DATA_V2_ENDPOINT: !FindInMap [ EnvironmentConfiguration, !Ref Environment, docAppCriDataV2Endpoint ]
          DOC_APP_CRI_DATA_ENDPOINT: unused
          DOC_APP_V2_DATA_ENDPOINT_ENABLED: true
          DOC_APP_JWKS_URL: !Sub
            - ${DocAppBackendUri}/.well-known/jwks.json
            - DocAppBackendUri: !FindInMap [ EnvironmentConfiguration, !Ref Environment, docAppBackendUri ]
          DOC_APP_AUD: !FindInMap [ EnvironmentConfiguration, !Ref Environment, docAppAud ]
          DOC_APP_NEW_AUD_CLAIM_ENABLED: true
          INTERNAl_SECTOR_URI: !Sub
            - https://identity.${ServiceDomain}/
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
          LOGIN_URI: !Sub
            - https://signin.${ServiceDomain}/doc-app-callback
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
          REDIS_KEY: session
          TXMA_AUDIT_QUEUE_URL:
            Fn::ImportValue: !Sub orchestration-${Environment}-txma-QueueURL
          ENVIRONMENT: !Sub ${Environment}
          EXTERNAL_TOKEN_SIGNING_KEY_ALIAS: !FindInMap [ EnvironmentConfiguration, !Ref Environment, idTokenKeyArn ]
          OIDC_API_BASE_URL: !Sub
            - https://oidc.${ServiceDomain}/
            - ServiceDomain: !FindInMap [ EnvironmentConfiguration, !Ref Environment, serviceDomain ]
          DYNAMO_ARN_PREFIX: !Sub
            - 'arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-'
            - AccountId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authAccountId ]
              AuthEnvironment: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authEnvironment ]
      Policies:
        Statement:
          - Sid: AllowGetParameters
            Effect: "Allow"
            Action:
              - "ssm:GetParameter"
              - "ssm:GetParameters"
            Resource:
              - !Sub "arn:aws:ssm:eu-west-2:816047645251:parameter/${Environment}-session-redis-master-host"
              - !Sub "arn:aws:ssm:eu-west-2:816047645251:parameter/${Environment}-session-redis-tls"
              - !Sub "arn:aws:ssm:eu-west-2:816047645251:parameter/${Environment}-session-redis-port"
              - !Sub "arn:aws:ssm:eu-west-2:816047645251:parameter/${Environment}-session-redis-password"
          - Sid: AllowDecryptOfParameters
            Effect: "Allow"
            Action: "kms:Decrypt"
            Resource: !GetAtt MainKmsKey.Arn
          - Sid: AllowDocAppCredentialTableAccess
            Effect: "Allow"
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:DescribeTable
              - dynamodb:Get*
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
              - dynamodb:PutItem
            Resource: !Sub
              - 'arn:aws:dynamodb:eu-west-2:${AccountId}:table/${AuthEnvironment}-doc-app-credential'
              - AccountId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authAccountId ]
                AuthEnvironment: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authEnvironment ]
          - Sid: AllowDocAppCredentialTableKms
            Effect: Allow
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:CreateGrant
              - kms:DescribeKey
            Resource: !FindInMap [ EnvironmentConfiguration, !Ref Environment, docAppCredentialTableKeyArn ]
          - Sid: AllowDocAppSigningKey
            Effect: Allow
            Action:
              - kms:Sign
              - kms:GetPublicKey
            Resource: !FindInMap [ EnvironmentConfiguration, !Ref Environment, docAppSigningKeyArn ]
      Tags:
        CheckovRulesToSkip: CKV_AWS_116.CKV_AWS_173

  DocAppCallbackFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${Environment}-doc-app-callback-lambda
      KmsKeyId: !GetAtt MainKmsKey.Arn
      RetentionInDays: 14

  DocAppCallbackFunctionCrossAccountPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref DocAppCallbackFunction.Alias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub
        - 'arn:aws:execute-api:eu-west-2:${AccountId}:${ApiId}/*/GET/doc-app-callback'
        - AccountId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authAccountId ]
          ApiId: !FindInMap [ EnvironmentConfiguration, !Ref Environment, authApiId ]

  LambdaSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Lambda Security Group permissions ruleset
      VpcId:
        Fn::ImportValue: !Sub ${VpcStackName}-VpcId
      SecurityGroupEgress:
        - DestinationSecurityGroupId:
            Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
          Description: Allow outbound traffic to vpc endpoints
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
        - CidrIp: 10.0.0.0/16
          Description: Allow outbound traffic to vpc endpoints
          IpProtocol: tcp
          FromPort: 6379
          ToPort: 6379
        - DestinationPrefixListId: pl-b3a742da
          Description: Allow traffic to dynamoDb
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443

  SlackEvents:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Environment}-slack-events
      KmsMasterKeyId: !GetAtt MainKmsKey.Arn

Outputs:
  SlackEventsArn:
    Description: 'ARN of the SlackEvents SNS topic'
    Value: !Ref SlackEvents
    Export:
      Name: !Sub '${AWS::StackName}-SlackEventsArn'
