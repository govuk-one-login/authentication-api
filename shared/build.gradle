plugins {
    id "java-library"
    id "jacoco"
    id 'io.freefair.aspectj.post-compile-weaving'
}

group "uk.gov.di"
version "unspecified"

dependencies {

    implementation configurations.lambda,
            configurations.nimbus,
            configurations.bouncycastle,
            configurations.govuk_notify,
            configurations.dynamodb,
            configurations.jetbrains_annotations,
            configurations.kms,
            configurations.lettuce,
            configurations.libphonenumber,
            configurations.hamcrest,
            configurations.sns,
            configurations.s3,
            configurations.sqs,
            configurations.ssm,
            configurations.cloudwatch,
            configurations.gson,
            configurations.apache,
            configurations.vavr,
            configurations.otel_http_client

    api configurations.otel
    implementation("software.amazon.awssdk:cloudwatchlogs:${dependencyVersions.aws_sdk_v2_version}")

    implementation configurations.aspectjrt
    compileOnly configurations.aspectjweaver

    testImplementation configurations.tests,
            configurations.lambda_tests,
            project(":shared-test")
    testRuntimeOnly configurations.test_runtime
}

test {
    useJUnitPlatform()
    environment "TRACING_ENABLED", "false"

    // Enable AspectJ weaving during test execution using runtimeClasspath to find the jar
    doFirst {
        def aspectjWeaverJar = configurations.runtimeClasspath.find { it.name.contains("aspectjweaver") }
        if (aspectjWeaverJar) {
            jvmArgs "-javaagent:${aspectjWeaverJar.absolutePath}"
        } else {
            logger.warn("AspectJ weaver jar not found in runtime classpath!")
        }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    dependsOn "test"
}
