plugins {
    id "java"
    id "jacoco"
    alias(libs.plugins.pact)
}

group = "uk.gov.di.authentication.doccheckingapp"
version = "unspecified"

dependencies {
    testImplementation(libs.lambda.tests)
    testImplementation(libs.bundles.aws.lambda)
    testImplementation(libs.aws.sqs)
    testImplementation(libs.aws.kms)
    testImplementation(libs.bundles.dynamodb)
    testImplementation(libs.pact.consumer)

    testRuntimeOnly(libs.junit.engine)
    runtimeOnly(libs.bundles.runtime.logging)

    compileOnly(libs.bundles.aws.lambda)
    compileOnly(libs.bundles.dynamodb)
    compileOnly(libs.aws.sns)
    compileOnly(libs.aws.kms)

    implementation project(":orchestration-shared")
    implementation(libs.bundles.nimbusds)
    implementation(libs.gson)
    testImplementation project(":orchestration-shared-test")
    testImplementation(libs.bundles.testing)
    testImplementation(libs.bundles.apache)
    implementation(libs.bouncycastle)
}

test {
    useJUnitPlatform()
    environment "TRACING_ENABLED", "false"
    exclude 'uk/gov/di/authentication/app/contract/**'
}

var pactDir = "$rootDir/doc-checking-app-api/src/test/pact"

task pactConsumerTests (type: Test, group: "verification") {
    useJUnitPlatform()
    include 'uk/gov/di/authentication/app/contract/**'
    systemProperties['pact.rootDir'] = pactDir
}

pact {
    publish {
        pactDirectory = pactDir
        pactBrokerUrl = "$System.env.PACT_URL".toString() + "?testSource=" + "$System.env.PACT_BROKER_SOURCE_HEADER".toString()
        pactBrokerUsername = "$System.env.PACT_USER".toString()
        pactBrokerPassword = "$System.env.PACT_PASSWORD".toString()
        consumerVersion = "$System.env.CONSUMER_APP_VERSION".toString()
        consumerBranch = "${System.env.GIT_BRANCH}".toString()
        tags = [
            "${System.env.GIT_BRANCH}".toString()
        ]
    }
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into("lib") {
        from configurations.runtimeClasspath
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jacocoTestReport {
    reports {
        xml.required = true
    }
    dependsOn "test"
}
